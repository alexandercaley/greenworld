{"version":3,"sources":["components/Users/UserAuth.js","components/redux/actions/userauthAction.js","components/layout/Navbar.js","components/pages/ImageLoad.js","components/pages/showPostings.js","components/pages/Item.js","components/pages/Home.js","components/pages/News.js","components/pages/AboutUs.js","components/Users/Login.js","components/redux/actions/loginAction.js","components/pages/Post.js","components/pages/Category.js","components/Users/Register.js","components/redux/actions/registerAction.js","App.js","serviceWorker.js","components/redux/reducers/loginReducer.js","components/redux/reducers/registerReducer.js","components/redux/reducers/userauthReducer.js","index.js","assets/donkey.jpg"],"names":["UserAuth","loginButton","_this","props","clickLogin","console","log","registerButton","clickRegister","this","login","_this$props","register","react_default","a","createElement","className","react_router_dom","to","Button_default","id","onClick","Component","mapDispatchToProps","type","connect","state","_state$userauthReduce","userauthReducer","withRouter","Navbar","logout","_callee","regenerator_default","wrap","_context","prev","next","localStorage","removeItem","t0","stop","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","style","color","Users_UserAuth","React","ImageLoad","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pictures","onDrop","bind","assertThisInitialized","picture","setState","concat","compiled_default","withIcon","buttonText","onChange","imgExtension","maxFileSize","showPostingss","data","_this2","axios","get","then","res","catch","err","map","i","location","postType","postStatus","key","src","Home","logo","alt","width","News","AboutUs","Login","handleSubmit","event","preventDefault","stopPropagation","target","children","obj","username","value","password","post","message","validateStatus","USER_NOT_FOUND","validated","LOOGEDIN","INCORRECT_USERNAME_OR_PASSWORD","setItem","token","path","undefined","ROUTE","history","push","route","reRouteAfterCompleteLogin","Form","noValidate","onSubmit","e","Row","Group","as","Col","md","controlId","Label","Control","placeholder","es_Button","validate","_state$loginReducer","loginReducer","REDIRECT","Post","_this$state","checkPostings","changePostStatus","inputPostType","changeLocation","inputLocation","changePostType","toggle","prevState","modal","curToken","getItem","Users_Login","htmlFor","name","pages_ImageLoad","Category","displayMenu","showDropdownMenu","hideDropdownMenu","document","addEventListener","_this3","removeEventListener","background","Register","firstName","lastName","includes","registered","USER_ALREADY_EXISTS","FORM_NOT_FULLFILLED","SPACE_IN_USERNAME","firstName1","split","lastName1","username1","password1","formNotFullfilled","firstname","lastname","isRegistered","Form_default","required","defaultValue","Feedback","userAlreadyExists","_state$registerReduce","registerReducer","App","layout_Navbar","react_router","exact","component","showPostings","Boolean","window","hostname","match","INITIAL_STATE","arguments","length","action","_action$validate","objectSpread","rootReducer","combineReducers","store","createStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1ad1876b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, withRouter, Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport { clickLogin, clickRegister } from \"../redux/actions/userauthAction\";\nimport ReactDOM from \"react-dom\";\n\nclass UserAuth extends Component {\n\n  loginButton = () => {\n    this.props.clickLogin();\n    console.log(\"clicked login\");\n    \n  };\n\n  registerButton = () => {\n    this.props.clickRegister();\n    console.log(\"clicked register\");\n  };\n\n  componentDidMount() {\n    console.log(this.props.login);\n  }\n\n  render() {\n    let { login, register } = this.props;\n    console.log(login);\n    return (\n      <div className=\"userAuth\">\n        {(login && <Link to={\"/login\"}></Link> ) || (\n          <Button id=\"loginButton\" onClick={this.loginButton}>\n            Login\n            <Link to={\"/login\"}></Link>\n          </Button>\n        )}\n        {register || (\n          <Button id=\"registerButton\" onClick={this.registerButton}>\n            Register\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let { login, register } = state.userauthReducer;\n  return {\n    login,\n    register\n  };\n};\n\nconst mapDispatchToProps = {\n  clickLogin,\n  clickRegister\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(UserAuth));\n","export const clickLogin = () => {\n  return {\n    type: \"CLICKED_LOGIN\"\n  };\n};\n\nexport const clickRegister = () => {\n  return {\n    type: \"CLICKED_REGISTER\"\n  };\n};\n","import React from \"react\";\nimport logo from \"../../assets/donkey.jpg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport UserAuth from \"../Users/UserAuth\"\n\nclass Navbar extends React.Component {\n\n  // Logout function\n  // Basically just clear localstorage\n  logout = async () => {\n    try {\n      // Async await so we to make sure token gets removed before\n      // performing any other tasks\n      console.log(localStorage);\n      await localStorage.removeItem('token');\n      console.log(localStorage);\n      console.log(\"Logged out\");\n    } catch (error) {\n      // Error saving data\n      console.log(\"===Error Line 16 Navbar.js===\");\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n        \n        <a className=\"navbar-brand ml-5\" href=\"#\">\n          <h1>Team 06</h1>\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span>\n            <i className=\"fas fa-bars\" style={{ color: \"#fff\" }} />\n          </span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav m-auto\">\n            <li className=\"nav-item active\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/home\"\n              >\n                Home\n                <i className=\"fas fa-home\" />\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/news\"\n              >\n                news\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/aboutUs\"\n              >\n                About Us\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/post\"\n              >\n                Post\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/category\"\n              >\n                Category\n              </Link>\n            </li>{\" \"}\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/login\"\n              >\n                login\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/register\"\n              >\n                register\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/\"\n                onClick={this.logout}\n              >\n                Logout\n              </Link>\n            </li>\n          </ul>\n          <UserAuth />\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport ImageUploader from \"react-images-upload\";\n\nclass ImageLoad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pictures: [] };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ImageUploader\n          withIcon={true}\n          buttonText=\"Upload images\"\n          onChange={this.onDrop}\n          imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n          maxFileSize={5242880}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageLoad;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport ImageLoad from \"./ImageLoad\";\nimport Item from \"./Item\";\n\nclass showPostingss extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/postings\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          data: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    console.log(this.state.data);\n    return (\n      <div>\n        {this.state.data.map(i => {\n          let { id, location, postType, postStatus, picture } = i;\n          return (\n            <tr key={i} className=\"row\">\n              <td>\n                <div>\n                  <p>{id}</p>\n                  <img src={`${id}`}/>\n                  <p>{location}</p>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default showPostingss;\n","import React, {Component} from 'react';\n\nclass Item extends Component {\n    render() {\n        return (\n            <div>\n                <p>{this.props.item.name}</p>\n                <p>{this.props.item.color}</p>\n                <p>${this.props.item.price}</p>\n            </div>\n        );\n    }\n}\n\nexport default Item;","import React, { Component } from \"react\";\nimport logo from \"../../assets/donkey.jpg\";\nimport axios from \"axios\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport ImageLoad from \"./ImageLoad\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">This is a home page</div>\n        <div>\n          <img src={logo} alt=\"logo\" style={{ width: \"200px\" }} />{\" \"}\n          <img src={logo} alt=\"logo\" style={{ width: \"200px\" }} />{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass News extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">Get your News here</div>\n      </div>\n    );\n  }\n}\n\nexport default News;\n","import React, { Component } from \"react\";\n\nclass AboutUs extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">About Us</div>\n      </div>\n    );\n  }\n}\n\nexport default AboutUs;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { validateStatus, reRouteAfterCompleteLogin } from \"../redux/actions/loginAction\";\nimport axios from \"axios\";\n\nclass Login extends Component {\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(event.target.children[0]);\n    let username = event.target.children[0].children[0].children[1].value;\n    let password = event.target.children[0].children[1].children[1].value;\n    let obj = {\n      username: username,\n      password: password\n    };\n    console.log(obj);\n    axios\n      .post(\"/userauth/login\", obj)\n      .then(res => {\n        console.log(res);\n\n        // Handle code based on message response from backend\n        let message = res.data.message;\n\n        // Handle if login was successful\n        if (message === \"LOGIN_SUCCESS\") {\n\n          let validate = {\n            USER_NOT_FOUND: false,\n            validated: true,\n            LOOGEDIN: true,\n            INCORRECT_USERNAME_OR_PASSWORD: false\n          }\n          this.props.validateStatus(validate);\n          localStorage.setItem('token', res.data.token);\n          console.log(localStorage)\n          \n          let path = \"\";\n\n          // put somet path here where you want to redirect after loging in \n          if(this.props.ROUTE != undefined) {\n            path =  this.props.ROUTE;\n            console.log(path);\n            console.log(this.props.history);\n            this.props.history.push(path);\n          } else {\n            path = \"/\";\n            this.props.history.push(path);\n            console.log(path);\n          } \n        } \n        // If cannot find user \n        else if (message === \"USER_NOT_FOUND\") {\n\n          let notFound = {\n            USER_NOT_FOUND: true,\n            validated: false,\n            LOOGEDIN: false,\n            INCORRECT_USERNAME_OR_PASSWORD: false\n          }\n\n          this.props.validateStatus(notFound);\n        } \n        // If username or password was incorrect.\n        else if (message === \"INCORRECT_USERNAME_OR_PASSWORD\") {\n\n          let incorrectData = {\n            USER_NOT_FOUND: false,\n            validated: false,\n            LOOGEDIN: false,\n            INCORRECT_USERNAME_OR_PASSWORD: true\n          }\n\n          this.props.validateStatus(incorrectData);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    console.log(\"hi\");\n    console.log(this.props.route)\n\n    // get route passed from post page route\n    // We do this so we can redirect back to post page\n    let route = this.props.route\n    this.props.reRouteAfterCompleteLogin(this.props.route);\n  }\n\n  render() {\n    const {\n      validated,\n      LOOGEDIN,\n      INCORRECT_USERNAME_OR_PASSWORD,\n      USER_NOT_FOUND\n    } = this.props;\n    return (\n      <div>\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n            className=\"LoginForm\"\n          >\n            <Form.Row>\n              <Form.Group as={Col} md=\"8\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"User Name\" />\n              </Form.Group>\n              <Form.Group as={Col} md=\"8\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n            </Form.Row>\n            {INCORRECT_USERNAME_OR_PASSWORD && (\n              <p className=\"errorHandler\">Incorrect Username or Password</p>\n            )}\n            {USER_NOT_FOUND && <p className=\"errorHandler\">User not found</p>}\n            <Button type=\"submit\">Login</Button>\n          </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  let { \n    username,\n    password,\n    validated,\n    LOOGEDIN,\n    USER_NOT_FOUND,\n    INCORRECT_USERNAME_OR_PASSWORD,\n    REDIRECT,\n    ROUTE\n  } = state.loginReducer;\n  console.log(state);\n  return {\n    username,\n    password,\n    validated,\n    LOOGEDIN,\n    USER_NOT_FOUND,\n    INCORRECT_USERNAME_OR_PASSWORD,\n    REDIRECT,\n    ROUTE\n  };\n}\n\nconst mapDispatchToProps = {\n  validateStatus,\n  reRouteAfterCompleteLogin\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Login));\n","export const validateStatus = validate => {\n  return {\n    type: \"VALIDATE\",\n    validate\n  };\n};\n\n// Re routes based on given route after logging in\nexport const reRouteAfterCompleteLogin = route => {\n  return {\n    type: \"REDIRECT\",\n    route\n  }\n}","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\n\n// import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport ImageLoad from \"./ImageLoad\";\nimport Login from \"../Users/Login\"\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postStatus: \"\",\n      location: \"\",\n      postType: \"\"\n      // discription: \"\n    };\n    //   this.handleUploadImage = this.handleUploadImage.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let { postStatus, location, postType } = this.state;\n    console.log(postStatus, location, postType);\n    axios\n      .post(\"/api/postings\", {\n        postStatus,\n        location,\n        postType\n      })\n      .then(res => {\n        console.log(\"hi\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    console.log();\n  };\n\n  checkPostings = () => {};\n\n  changePostStatus = e => {\n    let inputPostType = e.target.value;\n    this.setState({ postStatus: inputPostType });\n  };\n\n  changeLocation = e => {\n    let inputLocation = e.target.value;\n    this.setState({ location: inputLocation });\n  };\n\n  changePostType = e => {\n    let inputPostType = e.target.value;\n    this.setState({ postType: inputPostType });\n  };\n\n  // changepostStatus = e => {\n  //   let inputIssue = e.target.value;\n  //   this.setState({ postStatus: inputIssue });\n  // };\n\n  toggle(e) {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    let curToken = localStorage.getItem(\"token\");\n    return (\n      <div>\n        { curToken == null && <p> You must login before you can post anything </p> }\n        {/* We pass in the route to props for Login because login has a feature\n        to detect any incoming routes to redirect back to that page\n        after logging in  */}\n        { curToken == null ? <Login route=\"/post\" /> :\n          <div\n          className=\"ui form segment text-center\"\n          onSubmit={this.handleSubmit}\n          noValidate\n        >\n          <h3 className=\"text-center text-info\">Post Any Issue</h3>\n          <br />\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Type Issue</label>\n              <br />\n              <input\n                // className={formErrors.name.length > 0 ? \"error\" : null}\n                placeholder=\"Type Issue\"\n                name=\"fullname\"\n                type=\"text\"\n                onChange={this.changePostStatus}\n                noValidate\n                // onChange={this.handleChange}\n              />\n\n              {/* {formErrors.name.length > 0 && (\n              <Span className=\"errorMessage\">{formErrors.name}</Span>\n            )} */}\n            </div>\n          </div>\n          <br />\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Location</label>\n              <br />\n              <input\n                // className={formErrors.name.length > 0 ? \"error\" : null}\n                placeholder=\" Location\"\n                name=\"name\"\n                type=\"Lacation\"\n                onChange={this.changeLocation}\n                noValidate\n                // onChange={this.handleChange}\n              />\n\n              {/* {formErrors.name.length > 0 && (\n              <Span className=\"errorMessage\">{formErrors.name}</Span>\n            )} */}\n            </div>\n          </div>\n\n          <br />\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">post type</label>\n              <br />\n              <input\n                // className={formErrors.name.length > 0 ? \"error\" : null}\n                placeholder=\" post staus\"\n                name=\"post staus\"\n                type=\"post staus\"\n                onChange={this.changePostType}\n                noValidate\n                // onChange={this.handleChange}\n              />\n\n              {/* {formErrors.name.length > 0 && (\n              <Span className=\"errorMessage\">{formErrors.name}</Span>\n            )} */}\n            </div>\n          </div>\n\n          <br />\n          {/* <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Discription</label>\n\n              <br />\n              <input\n                // className={formErrors.name.length > 0 ? \"error\" : null}\n                placeholder=\" Detail\"\n                name=\"postType\"\n                type=\"postType\"\n                noValidate\n                // onChange={this.handleChange}\n              />\n            </div>\n          </div> */}\n          <br />\n          {/* <Link to=\"/showPostings\">\n            Click Here to check posted items in database\n          </Link> */}\n          <ImageLoad />\n\n          <br />\n          <button className=\"submit button\" onClick={this.handleSubmit}>\n            Submit Issue\n          </button>\n        </div>\n        }\n        \n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\n\nclass Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      displayMenu: false\n    };\n    this.showDropdownMenu = this.showDropdownMenu.bind(this);\n    this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\n  }\n  showDropdownMenu(event) {\n    event.preventDefault();\n    this.setState({ displayMenu: true }, () => {\n      document.addEventListener(\"click\", this.hideDropdownMenu);\n    });\n  }\n  hideDropdownMenu() {\n    this.setState({ displayMenu: false }, () => {\n      document.removeEventListener(\"click\", this.hideDropdownMenu);\n    });\n  }\n  render() {\n    return (\n      <div className=\"dropdown\" style={{ background: \"red\", width: \"150px\" }}>\n        <div className=\"button\" onClick={this.showDropdownMenu}>\n          {\" \"}\n          {\"Item Category ^\"}\n        </div>\n        {this.state.displayMenu ? (\n          <ul>\n            <li>\n              <a className=\"active\" href=\"#Plastc\">\n                Plastc\n              </a>\n            </li>\n            <li>\n              <a href=\"#Tree Fall\">Tree Fall</a>\n            </li>\n            <li>\n              <a href=\"#Garbage\">Garbage </a>\n            </li>\n            <li>\n              <a href=\"#Water flood\">Water flood </a>\n            </li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport { validate, formNotFullfilled, registered, userAlreadyExists } from \"../redux/actions/registerAction\";\n\nclass Register extends Component {\n\n  handleSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    let firstName = event.target.children[0].children[0].children[1].value;\n    let lastName = event.target.children[0].children[1].children[1].value;\n    let username = event.target.children[0].children[2].children[1].value;\n    let password = event.target.children[0].children[3].children[1].value;\n\n    // check if names have spacing\n    if (\n      username.includes(\" \") ||\n      firstName.includes(\" \") ||\n      lastName.includes(\" \")\n    ) {\n\n      let validate = {\n        validated: false,\n        registered: false,\n        USER_ALREADY_EXISTS: false,\n        FORM_NOT_FULLFILLED: false,\n        SPACE_IN_USERNAME: true\n      }\n\n      this.props.validate(validate);\n      return 0;\n    }\n\n    // split into arrays to guarentee no spacing\n    let firstName1 = firstName.split(\" \");\n    let lastName1 = lastName.split(\" \");\n    let username1 = username.split(\" \");\n    let password1 = password.split(\" \");\n    \n    // check if any fields are empty\n    // If any field is empty change state in registerReducer of formNotFullfilled to true\n    if (\n      firstName1[0] === \"\" ||\n      lastName1[0] === \"\" ||\n      username1[0] === \"\" ||\n      password1[0] === \"\"\n    ) {\n      console.log(password1)\n      this.props.formNotFullfilled();\n    } else {\n      let obj = {\n        firstname: firstName,\n        lastname: lastName,\n        username: username,\n        password: password\n      };\n\n      axios\n        .post(\"/userauth/register\", obj)\n        .then(res => {\n          \n          // if(res.data.error) {\n          //   let error = res.data.error;\n          //   if(error === \"USER_ALREADY_EXISTS\")            \n          // }\n          // if(res.data.message) {\n            let message = res.data.message;\n            if(message === \"REGISTER_SUCCESS\"){\n              this.props.registered();\n              const path = \"/login\";\n              this.props.history.push(path);          \n            } else if(message === \"USER_ALREADY_EXISTS\") {\n              console.log(\"user already exists\");\n            } else if(message === \"ERR_NO_PASSWORD\") {\n              console.log(\"handle no password error\")\n            }\n          // }\n\n        })\n        .catch(err => {\n          console.log(err.message);\n        });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      validated,\n      isRegistered,\n      USER_ALREADY_EXISTS,\n      FORM_NOT_FULLFILLED,\n      SPACE_IN_USERNAME\n    } = this.props;\n    return (\n      <div>\n        {!isRegistered && (\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n            className=\"RegisterForm\"\n          >\n            <Form.Row>\n              <Form.Group as={Col} md=\"4\" controlId=\"firstName\">\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"First name\"\n                  defaultValue=\"Mark\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"4\" controlId=\"lastName\">\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"Last name\"\n                  defaultValue=\"Otto\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"8\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"User Name\" />\n                {USER_ALREADY_EXISTS && (\n                  <p className=\"errorHandler\">User already exists</p>\n                )}\n              </Form.Group>\n              <Form.Group as={Col} md=\"8\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n            </Form.Row>\n            {FORM_NOT_FULLFILLED && (\n              <p className=\"errorHandler\">Please fill out form</p>\n            )}\n            {SPACE_IN_USERNAME && (\n              <p className=\"errorHandler\">\n                No spaces are allowed as characters\n              </p>\n            )}\n            <Button type=\"submit\">Register</Button>\n          </Form>\n        )}\n        {/* {registered && <Login />} */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  let {\n    username,\n    password,\n    validated,\n    isRegistered,\n    USER_ALREADY_EXISTS,\n    FORM_NOT_FULLFILLED,\n    SPACE_IN_USERNAME \n  } = state.registerReducer;\n  console.log(state);\n  return {\n    username,\n    password,\n    validated,\n    isRegistered,\n    USER_ALREADY_EXISTS,\n    FORM_NOT_FULLFILLED,\n    SPACE_IN_USERNAME \n  };\n}\n\nconst mapDispatchToProps = {\n  validate,\n  formNotFullfilled,\n  registered,\n  userAlreadyExists\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Register);\n","export const validate = validate => {\n  return {\n    type: \"REGISTER_VALIDATE\",\n    validate\n  };\n};\n\nexport const formNotFullfilled = () => {\n  return {\n    type: \"FORM_NOT_FULLFILLED\"\n  };\n};\n\nexport const registered = () => {\n  return {\n    type: \"REGISTERED\"\n  };\n};\n\nexport const userAlreadyExists = () => {\n  return {\n    type: \"USER_ALREADY_EXISTS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/layout/Navbar\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\n// Import Pages\nimport showPostings from \"./components/pages/showPostings\";\nimport Home from \"./components/pages/Home\";\nimport News from \"./components/pages/News\";\nimport AboutUs from \"./components/pages/AboutUs\";\nimport Post from \"./components/pages/Post\";\nimport Category from \"./components/pages/Category\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Login from \"./components/Users/Login\";\nimport Register from \"./components/Users/Register\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/news\" component={News} />\n            <Route exact path=\"/aboutUs\" component={AboutUs} />\n            <Route exact path=\"/post\" component={Post} />\n            <Route exact path=\"/category\" component={Category} />\n            <Route exact path=\"/showPostings\" component={showPostings} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\n  username: \"\",\n  password: \"\",\n  validated: false,\n  LOOGEDIN: false,\n  USER_NOT_FOUND: false,\n  INCORRECT_USERNAME_OR_PASSWORD: false,\n  // REDIRECT: false,\n  ROUTE: \"\",\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"VALIDATE\":\n      let {\n        validated,\n        LOOGEDIN,\n        USER_NOT_FOUND,\n        INCORRECT_USERNAME_OR_PASSWORD\n      } = action.validate;\n      return {\n        ...state,\n        validated: validated,\n        LOOGEDIN: LOOGEDIN,\n        USER_NOT_FOUND: USER_NOT_FOUND,\n        INCORRECT_USERNAME_OR_PASSWORD: INCORRECT_USERNAME_OR_PASSWORD\n      };\n    case \"REDIRECT\":\n      let route = action.route\n      return {\n        ...state,\n        // REDIRECT: true,\n        ROUTE: route\n      }\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","const INITIAL_STATE = {\n  username: \"\",\n  password: \"\",\n  validated: false,\n  isRegistered: false,\n  USER_ALREADY_EXISTS: false,\n  FORM_NOT_FULLFILLED: false,\n  SPACE_IN_USERNAME: false\n};\n\nconst registerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"REGISTER_VALIDATE\":\n      let {\n        validated,\n        isRegistered,\n        USER_ALREADY_EXISTS,\n        FORM_NOT_FULLFILLED,\n        SPACE_IN_USERNAME\n      } = action.validate;\n\n      return {\n        ...state,\n        validated,\n        isRegistered,\n        USER_ALREADY_EXISTS,\n        FORM_NOT_FULLFILLED,\n        SPACE_IN_USERNAME\n      };\n    case \"FORM_NOT_FULLFILLED\":\n      return {\n        ...state,\n        FORM_NOT_FULLFILLED: true\n      };\n    case \"REGISTERED\":\n      return {\n        ...state,\n        isRegistered: true,\n        validated: true\n      };\n    case \"USER_ALREADY_EXISTS\":\n      return {\n        ...state,\n        USER_ALREADY_EXISTS: true,\n        FORM_NOT_FULLFILLED: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default registerReducer;\n","const INITIAL_STATE = {\n  login: false,\n  register: false\n};\n\nconst userauthReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"CLICKED_LOGIN\":\n      return {\n        login: true,\n        register: false\n      };\n\n    case \"CLICKED_REGISTER\":\n      return {\n        login: false,\n        register: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userauthReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import redux\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\n// import reducers\nimport loginReducer from \"./components/redux/reducers/loginReducer\";\nimport registerReducer from \"./components/redux/reducers/registerReducer\";\nimport userauthReducer from \"./components/redux/reducers/userauthReducer\"\n\n// combine reducers\nconst rootReducer = combineReducers({\n  loginReducer,\n  registerReducer,\n  userauthReducer\n});\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/donkey.920876bf.jpg\";"],"sourceRoot":""}