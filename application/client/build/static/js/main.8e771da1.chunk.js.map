{"version":3,"sources":["components/Users/UserAuth.js","components/redux/actions/userauthAction.js","components/layout/Navbar.js","components/pages/showPostings.js","components/pages/Home.js","components/pages/News.js","components/pages/AboutUs.js","components/pages/DraggableUploader.js","components/Users/Login.js","components/redux/actions/loginAction.js","components/pages/Post.js","components/redux/actions/postAction.js","components/pages/Category.js","components/Users/Register.js","components/redux/actions/registerAction.js","App.js","serviceWorker.js","components/redux/reducers/loginReducer.js","components/redux/reducers/registerReducer.js","components/redux/reducers/userauthReducer.js","components/redux/reducers/postReducer.js","index.js","assets/donkey.jpg"],"names":["UserAuth","loginButton","_this","props","clickLogin","console","log","registerButton","clickRegister","this","login","_this$props","register","react_default","a","createElement","className","react_router_dom","to","Button_default","id","onClick","Component","mapDispatchToProps","type","connect","state","_state$userauthReduce","userauthReducer","withRouter","Navbar","logout","_callee","regenerator_default","wrap","_context","prev","next","localStorage","removeItem","t0","stop","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","style","color","Users_UserAuth","React","showPostingss","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","data","_this2","axios","get","then","res","setState","catch","err","map","i","location","postType","postStatus","picture","key","src","concat","Home","logo","alt","width","News","AboutUs","DraggableUploader","onUpload","_this$state","loadedFiles","fd","confidence","diagnosis","e","file","currentTarget","files","FormData","fileReader","FileReader","append","name","onload","result","isUploading","addLoadedFile","onabort","alert","onerror","readAsDataURL","prevState","toConsumableArray","_","filter","ldFile","oldFile","newFile","find","idx","_this3","display","flexDirection","ref","input","fileInput","onDragOver","preventDefault","stopPropagation","onDrop","onFileLoad","bind","onChange","progressBar","removeLoadedFile","react_icons_kit","icon","remove","size","buttons","text","intent","Intent","PRIMARY","minimal","click","Login","handleSubmit","event","target","children","obj","username","value","password","post","message","validateStatus","USER_NOT_FOUND","validated","LOOGEDIN","INCORRECT_USERNAME_OR_PASSWORD","setItem","token","path","undefined","ROUTE","history","push","route","reRouteAfterCompleteLogin","Form","noValidate","onSubmit","Row","Group","as","Col","md","controlId","Label","Control","placeholder","es_Button","validate","_state$loginReducer","loginReducer","REDIRECT","registerReducer","Post","checkPostings","changeTextField","typeIssue","defineProperty","updateForm","modal","curToken","getItem","Users_Login","htmlFor","pages_DraggableUploader","fieldToChange","_state$postReducer","postReducer","Category","displayMenu","showDropdownMenu","assertThisInitialized","hideDropdownMenu","document","addEventListener","removeEventListener","background","Register","firstName","lastName","includes","registered","USER_ALREADY_EXISTS","FORM_NOT_FULLFILLED","SPACE_IN_USERNAME","firstName1","split","lastName1","username1","password1","formNotFullfilled","firstname","lastname","isRegistered","Form_default","required","defaultValue","Feedback","userAlreadyExists","_state$registerReduce","App","layout_Navbar","react_router","exact","component","showPostings","Boolean","window","hostname","match","INITIAL_STATE","arguments","length","action","_action$validate","objectSpread","rootReducer","combineReducers","store","createStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"mVAOMA,6MAEJC,YAAc,WACZC,EAAKC,MAAMC,aACXC,QAAQC,IAAI,oBAIdC,eAAiB,WACfL,EAAKC,MAAMK,gBACXH,QAAQC,IAAI,wGAIZD,QAAQC,IAAIG,KAAKN,MAAMO,wCAGhB,IAAAC,EACmBF,KAAKN,MAAzBO,EADCC,EACDD,MAAOE,EADND,EACMC,SAEb,OADAP,QAAQC,IAAII,GAEVG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXN,GAASG,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YACnBL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQM,GAAG,cAAcC,QAASZ,KAAKR,aAAvC,QAEEY,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAGbN,GACCC,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQM,GAAG,iBAAiBC,QAASZ,KAAKF,gBAA1C,oBA7Bae,aA8CjBC,EAAqB,CACzBnB,WCtDwB,WACxB,MAAO,CACLoB,KAAM,kBDqDRhB,cCjD2B,WAC3B,MAAO,CACLgB,KAAM,sBDkDKC,cAbS,SAAAC,GAAS,IAAAC,EACLD,EAAME,gBAChC,MAAO,CACLlB,MAH6BiB,EACzBjB,MAGJE,SAJ6Be,EAClBf,WAcbW,EAFaE,CAGbI,YAAW7B,IE8DE8B,6MAhHbC,4BAAS,SAAAC,IAAA,OAAAC,EAAAnB,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAIL/B,QAAQC,IAAIgC,cAJPH,EAAAE,KAAA,EAKCC,aAAaC,WAAW,SALzB,OAMLlC,QAAQC,IAAIgC,cACZjC,QAAQC,IAAI,cAPP6B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAUL9B,QAAQC,IAAI,iCACZD,QAAQC,IAAR6B,EAAAK,IAXK,yBAAAL,EAAAM,SAAAT,EAAA,yFAgBP,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDAEbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoB0B,KAAK,KACpC7B,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVQ,KAAK,SACLmB,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXlC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcgC,MAAO,CAAEC,MAAO,YAI/CpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BI,GAAG,0BAC3CP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0CACVE,GAAG,SAFL,OAKEL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAGjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0CACVE,GAAG,SAFL,SAOFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0CACVE,GAAG,YAFL,aAOFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0CACVE,GAAG,SAFL,SAOFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0CACVE,GAAG,aAFL,aAMI,IACNL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0CACVE,GAAG,UAFL,UAOFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0CACVE,GAAG,aAFL,aAOFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,0CACVE,GAAG,IACHG,QAASZ,KAAKsB,QAHhB,YASJlB,EAAAC,EAAAC,cAACmC,EAAD,eA7GWC,IAAM7B,WCyCZ8B,cA5Cb,SAAAA,EAAYjD,GAAO,IAAAD,EAAA,OAAAmD,OAAAC,EAAA,EAAAD,CAAA5C,KAAA2C,IACjBlD,EAAAmD,OAAAE,EAAA,EAAAF,CAAA5C,KAAA4C,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhD,KAAMN,KACDuB,MAAQ,CACXgC,KAAM,IAHSxD,mFAOC,IAAAyD,EAAAlD,KAClBmD,IACGC,IAAI,iBACJC,KAAK,SAAAC,GACJ1D,QAAQC,IAAIyD,EAAIL,MAChBC,EAAKK,SAAS,CACZN,KAAMK,EAAIL,SAGbO,MAAM,SAAAC,GACL7D,QAAQC,IAAI4D,sCAMhB,OADA7D,QAAQC,IAAIG,KAAKiB,MAAMgC,MAErB7C,EAAAC,EAAAC,cAAA,WACGN,KAAKiB,MAAMgC,KAAKS,IAAI,SAAAC,GAAK,IAClBhD,EAAgDgD,EAAhDhD,GAAIiD,EAA4CD,EAA5CC,SAA4CD,EAAlCE,SAAkCF,EAAxBG,WAAwBH,EAAZI,QAC1C,OACE3D,EAAAC,EAAAC,cAAA,MAAI0D,IAAKL,EAAGpD,UAAU,OACpBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIK,GACJP,EAAAC,EAAAC,cAAA,OAAK2D,IAAG,GAAAC,OAAKvD,KACbP,EAAAC,EAAAC,cAAA,SAAIsD,gBAlCM/C,aCkBbsD,mLAZX,OACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,uBACAH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK2D,IAAKG,IAAMC,IAAI,OAAO9B,MAAO,CAAE+B,MAAO,WAAc,IACzDlE,EAAAC,EAAAC,cAAA,OAAK2D,IAAKG,IAAMC,IAAI,OAAO9B,MAAO,CAAE+B,MAAO,WAAc,aAPhDzD,aCMJ0D,6MAVbtD,MAAQ,2EAEN,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,8BALWM,aCWJ2D,6MAVbvD,MAAQ,2EAEN,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,oBALcM,wFCwMP4D,sBA/Lb,SAAAA,EAAY/E,GAAO,IAAAD,EAAA,OAAAmD,OAAAC,EAAA,EAAAD,CAAA5C,KAAAyE,IACjBhF,EAAAmD,OAAAE,EAAA,EAAAF,CAAA5C,KAAA4C,OAAAG,EAAA,EAAAH,CAAA6B,GAAAzB,KAAAhD,KAAMN,KA4ERgF,SAAW,WAAM,IAAAC,EACalF,EAAKwB,MADlB0D,EACPC,YADOD,EACME,GACrBjF,QAAQC,IAAI,iBA7EZJ,EAAKwB,MAAQ,CACX2D,YAAa,GACbC,GAAI,GACJC,WAAY,GACZC,UAAW,IANItF,0EAeRuF,GAAG,IAAA9B,EAAAlD,KACNiF,EAAOD,EAAEE,cAAcC,MAAM,GAC/BN,EAAK,IAAIO,SACbxF,QAAQC,IAAIgF,GACZ,IAAIQ,EAAa,IAAIC,WACrBT,EAAGU,OAAO,QAASN,EAAMA,EAAKO,MAC9BxF,KAAKuD,SAAS,CAAEsB,GAAIA,IACpBQ,EAAWI,OAAS,WAClB7F,QAAQC,IAAI,iBAAkBwF,EAAWK,QACzC,IAAMT,EAAO,CACXhC,KAAMoC,EAAWK,OACjBC,aAAa,GAGfzC,EAAK0C,cAAcX,IAGrBI,EAAWQ,QAAU,WACnBC,MAAM,oBAGRT,EAAWU,QAAU,WACnBD,MAAM,mBAGRT,EAAWW,cAAcf,yCAGbA,GACZjF,KAAKuD,SAAS,SAAA0C,GAAS,MAAK,CAC1BrB,YAAW,GAAAV,OAAAtB,OAAAsD,EAAA,EAAAtD,CAAMqD,EAAUrB,aAAhB,CAA6BK,gDAI3BA,GAEfjF,KAAKuD,SAAS,SAAA0C,GACZ,IAAIrB,EAAcqB,EAAUrB,YAI5B,MAAO,CAAEA,YAHYuB,IAAEC,OAAOxB,EAAa,SAAAyB,GACzC,OAAOA,GAAUpB,qDAOrBjF,KAAKuD,SAAS,CAAEqB,YAAa,8CAGd0B,EAASC,GAUxB,OATAvG,KAAKuD,SAAS,SAAA0C,GACZ,IAAMrB,EAAWhC,OAAAsD,EAAA,EAAAtD,CAAOqD,EAAUrB,aAKlC,OAJAuB,IAAEK,KAAK5B,EAAa,SAACK,EAAMwB,GACrBxB,GAAQqB,IAAS1B,EAAY6B,GAAOF,KAGnC,CAAE3B,iBAGJ2B,mCAkDA,IAAAG,EAAA1G,KACC4E,EAAgB5E,KAAKiB,MAArB2D,YAER,OACExE,EAAAC,EAAAC,cAAA,OACEC,UAAU,kBACVgC,MAAO,CACLoE,QAAS,OACTC,cAAe,WAGjBxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SACES,KAAK,OACLJ,GAAG,qBACH6E,KAAK,qBACLqB,IAAK,SAAAC,GAAK,OAAKJ,EAAKK,UAAYD,GAChCE,WAAY,SAAAhC,GACVA,EAAEiC,iBACFjC,EAAEkC,mBAEJC,OAAQnH,KAAKoH,WAAWC,KAAKrH,MAC7BsH,SAAUtH,KAAKoH,WAAWC,KAAKrH,QAEjCI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACZqE,EAAYlB,IAAI,SAACuB,EAAMwB,GACtB,OACErG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOyD,IAAKyC,GACzBrG,EAAAC,EAAAC,cAAA,OAAK2D,IAAKgB,EAAKhC,OACf7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACb0E,EAAKU,aAAevF,EAAAC,EAAAC,cAACiH,EAAA,EAAD,OAEvBnH,EAAAC,EAAAC,cAAA,QACEC,UAAU,aACVK,QAAS,kBAAM8F,EAAKc,iBAAiBvC,KAErC7E,EAAAC,EAAAC,cAACmH,EAAA,KAAD,CAAMC,KAAMC,SAAQC,KAAM,WAOtCxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,6BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CACEC,KAAK,SACLC,OAAQC,IAAOC,QACfC,SAAS,EACTtH,QAAS,kBAAM8F,EAAKK,UAAUoB,qBAhLZtH,wCCH1BuH,6MAEJC,aAAe,SAACC,GACdA,EAAMrB,iBACNqB,EAAMpB,kBACNtH,QAAQC,IAAIyI,EAAMC,OAAOC,SAAS,IAClC,IAEIC,EAAM,CACRC,SAHaJ,EAAMC,OAAOC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGG,MAI9DC,SAHaN,EAAMC,OAAOC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGG,OAKhE/I,QAAQC,IAAI4I,GACZtF,IACG0F,KAAK,kBAAmBJ,GACxBpF,KAAK,SAAAC,GACJ1D,QAAQC,IAAIyD,GAGZ,IAAIwF,EAAUxF,EAAIL,KAAK6F,QAGvB,GAAgB,kBAAZA,EAA6B,CAQ/BrJ,EAAKC,MAAMqJ,eANI,CACbC,gBAAgB,EAChBC,WAAW,EACXC,UAAU,EACVC,gCAAgC,IAGlCtH,aAAauH,QAAQ,QAAS9F,EAAIL,KAAKoG,OACvCzJ,QAAQC,IAAIgC,cAEZ,IAAIyH,EAAO,QAGYC,GAApB9J,EAAKC,MAAM8J,OACZF,EAAQ7J,EAAKC,MAAM8J,MACnB5J,QAAQC,IAAIyJ,GACZ1J,QAAQC,IAAIJ,EAAKC,MAAM+J,SACvBhK,EAAKC,MAAM+J,QAAQC,KAAKJ,KAExBA,EAAO,IACP7J,EAAKC,MAAM+J,QAAQC,KAAKJ,GACxB1J,QAAQC,IAAIyJ,SAIX,GAAgB,mBAAZR,EAA8B,CASrCrJ,EAAKC,MAAMqJ,eAPI,CACbC,gBAAgB,EAChBC,WAAW,EACXC,UAAU,EACVC,gCAAgC,SAM/B,GAAgB,mCAAZL,EAA8C,CASrDrJ,EAAKC,MAAMqJ,eAPS,CAClBC,gBAAgB,EAChBC,WAAW,EACXC,UAAU,EACVC,gCAAgC,OAMrC3F,MAAM,SAAAC,GACL7D,QAAQC,IAAI4D,yFAKhB7D,QAAQC,IAAI,MACZD,QAAQC,IAAIG,KAAKN,MAAMiK,OAIX3J,KAAKN,MAAMiK,MACvB3J,KAAKN,MAAMkK,0BAA0B5J,KAAKN,MAAMiK,wCAGzC,IAAAzG,EAAAlD,KAAAE,EAMHF,KAAKN,MAJPuJ,EAFK/I,EAEL+I,UAEAE,GAJKjJ,EAGLgJ,SAHKhJ,EAILiJ,gCACAH,EALK9I,EAKL8I,eAEF,OACE5I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACEC,YAAU,EACVb,UAAWA,EACXc,SAAU,SAAA/E,GAAC,OAAI9B,EAAKmF,aAAarD,IACjCzE,UAAU,aAEVH,EAAAC,EAAAC,cAACuJ,EAAA,EAAKG,IAAN,KACE5J,EAAAC,EAAAC,cAACuJ,EAAA,EAAKI,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,YACpCjK,EAAAC,EAAAC,cAACuJ,EAAA,EAAKS,MAAN,iBACAlK,EAAAC,EAAAC,cAACuJ,EAAA,EAAKU,QAAN,CAAcxJ,KAAK,OAAOyJ,YAAY,eAExCpK,EAAAC,EAAAC,cAACuJ,EAAA,EAAKI,MAAN,CAAYC,GAAIC,IAAKC,GAAG,IAAIC,UAAU,YACpCjK,EAAAC,EAAAC,cAACuJ,EAAA,EAAKS,MAAN,iBACAlK,EAAAC,EAAAC,cAACuJ,EAAA,EAAKU,QAAN,CAAcxJ,KAAK,WAAWyJ,YAAY,eAG7CrB,GACC/I,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,kCAEDyI,GAAkB5I,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,kBACnBH,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAQ1J,KAAK,UAAb,kBArHQF,aAwJdC,EAAqB,CACzBiI,eChK4B,SAAA2B,GAC5B,MAAO,CACL3J,KAAM,WACN2J,aD8JFd,0BCzJuC,SAAAD,GACvC,MAAO,CACL5I,KAAM,WACN4I,WDyJW3I,cAjCS,SAACC,GAAU,IAAA0J,EAU7B1J,EAAM2J,aARRlC,EAF+BiC,EAE/BjC,SACAE,EAH+B+B,EAG/B/B,SACAK,EAJ+B0B,EAI/B1B,UACAC,EAL+ByB,EAK/BzB,SACAF,EAN+B2B,EAM/B3B,eACAG,EAP+BwB,EAO/BxB,+BACA0B,EAR+BF,EAQ/BE,SACArB,EAT+BmB,EAS/BnB,MAKF,OAHA5J,QAAQC,IAAIoB,EAAM2J,cAClBhL,QAAQC,IAAIoB,EAAM6J,iBAClBlL,QAAQC,IAAIoB,GACL,CACLyH,WACAE,WACAK,YACAC,WACAF,iBACAG,iCACA0B,WACArB,UAaF1I,EAFaE,CAGbI,YAAWgH,IE9JP2C,6MAaJ1C,aAAe,SAAArD,GACbA,EAAEiC,iBADgB,IAAAtC,EAEuBlF,EAAKwB,MAAxC6C,EAFYa,EAEZb,WAAYF,EAFAe,EAEAf,SAAUC,EAFVc,EAEUd,SAC5BjE,QAAQC,IAAIiE,EAAYF,EAAUC,GAClCV,IACG0F,KAAK,gBAAiB,CACrB/E,aACAF,WACAC,aAEDR,KAAK,SAAAC,GACJ1D,QAAQC,IAAI,QAEb2D,MAAM,SAAAC,GACL7D,QAAQC,IAAI4D,KAEhB7D,QAAQC,SAGVmL,cAAgB,eAGhBC,gBAAkB,SAAAjG,GAChBpF,QAAQC,IAAImF,EAAEuD,OAAO/C,MACrB,IAAI0F,EAAStI,OAAAuI,EAAA,EAAAvI,CAAA,GAAMoC,EAAEuD,OAAO/C,KAAOR,EAAEuD,OAAOI,OAC5ClJ,EAAKC,MAAM0L,WAAWF,0EAuBjBlG,GACLhF,KAAKuD,SAAS,SAAA0C,GAAS,MAAK,CAC1BoF,OAAQpF,EAAUoF,0CAKpB,IAAIC,EAAWzJ,aAAa0J,QAAQ,SAEpC,OACEnL,EAAAC,EAAAC,cAAA,WACe,MAAZgL,GACClL,EAAAC,EAAAC,cAAA,0DAKW,MAAZgL,EACClL,EAAAC,EAAAC,cAACkL,EAAD,CAAO7B,MAAM,UAEbvJ,EAAAC,EAAAC,cAAA,OACEC,UAAU,8BACVwJ,SAAU/J,KAAKqI,aACfyB,YAAU,GAEV1J,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,kBACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,QAAf,cACArL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAEEkK,YAAY,aACZhF,KAAK,WACLzE,KAAK,OACL+I,YAAU,EACVxC,SAAUtH,KAAKiL,oBAQrB7K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,QAAf,YACArL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAEEkK,YAAY,YACZhF,KAAK,WACLzE,KAAK,WACLuG,SAAUtH,KAAKiL,gBACfnB,YAAU,MAUhB1J,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,QAAf,aACArL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAEEkK,YAAY,cACZhF,KAAK,aACLzE,KAAK,aACLuG,SAAUtH,KAAKiL,gBACfnB,YAAU,MAUhB1J,EAAAC,EAAAC,cAAA,WAgBAF,EAAAC,EAAAC,cAAA,WAKAF,EAAAC,EAAAC,cAACoL,EAAD,MAEAtL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBK,QAASZ,KAAKqI,cAAhD,yBA5KOxH,aAiMbC,EAAqB,CACzBsK,WC3MwB,SAAAO,GACxB,MAAO,CACL5K,KAAM,cACN4K,mBD2MW3K,cAbS,SAAAC,GAAS,IAAA2K,EACU3K,EAAM4K,YAC/C,MAAO,CACL/H,WAH6B8H,EACzB9H,WAGJF,SAJ6BgI,EACbhI,SAIhBC,SAL6B+H,EACH/H,WAc5B/C,EAFaE,CAGbI,YAAW2J,YE7JEe,cAjDb,SAAAA,IAAc,IAAArM,EAAA,OAAAmD,OAAAC,EAAA,EAAAD,CAAA5C,KAAA8L,IACZrM,EAAAmD,OAAAE,EAAA,EAAAF,CAAA5C,KAAA4C,OAAAG,EAAA,EAAAH,CAAAkJ,GAAA9I,KAAAhD,QACKiB,MAAQ,CACX8K,aAAa,GAEftM,EAAKuM,iBAAmBvM,EAAKuM,iBAAiB3E,KAAtBzE,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAAnD,KACxBA,EAAKyM,iBAAmBzM,EAAKyM,iBAAiB7E,KAAtBzE,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAAnD,KANZA,gFAQG6I,GAAO,IAAApF,EAAAlD,KACtBsI,EAAMrB,iBACNjH,KAAKuD,SAAS,CAAEwI,aAAa,GAAQ,WACnCI,SAASC,iBAAiB,QAASlJ,EAAKgJ,+DAGzB,IAAAxF,EAAA1G,KACjBA,KAAKuD,SAAS,CAAEwI,aAAa,GAAS,WACpCI,SAASE,oBAAoB,QAAS3F,EAAKwF,qDAI7C,OACE9L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWgC,MAAO,CAAE+J,WAAY,MAAOhI,MAAO,UAC3DlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASK,QAASZ,KAAKgM,kBACnC,IACA,mBAEFhM,KAAKiB,MAAM8K,YACV3L,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAS0B,KAAK,WAA3B,WAIF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,cAAR,cAEF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,YAAR,aAEF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,gBAAR,kBAGF,aA5CWpB,mDCMjB0L,wLAESjE,GAAO,IAAA7I,EAAAO,KAClBsI,EAAMrB,iBACNqB,EAAMpB,kBAEN,IAAIsF,EAAYlE,EAAMC,OAAOC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGG,MAC7D8D,EAAWnE,EAAMC,OAAOC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGG,MAC5DD,EAAWJ,EAAMC,OAAOC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGG,MAC5DC,EAAWN,EAAMC,OAAOC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGG,MAGhE,GACED,EAASgE,SAAS,MAClBF,EAAUE,SAAS,MACnBD,EAASC,SAAS,KAClB,CAWA,OADA1M,KAAKN,MAAMgL,SARI,CACbzB,WAAW,EACX0D,YAAY,EACZC,qBAAqB,EACrBC,qBAAqB,EACrBC,mBAAmB,IAId,EAIT,IAAIC,EAAaP,EAAUQ,MAAM,KAC7BC,EAAYR,EAASO,MAAM,KAC3BE,EAAYxE,EAASsE,MAAM,KAC3BG,EAAYvE,EAASoE,MAAM,KAI/B,GACoB,KAAlBD,EAAW,IACM,KAAjBE,EAAU,IACO,KAAjBC,EAAU,IACO,KAAjBC,EAAU,GAEVvN,QAAQC,IAAIsN,GACZnN,KAAKN,MAAM0N,wBACN,CACL,IAAI3E,EAAM,CACR4E,UAAWb,EACXc,SAAUb,EACV/D,SAAUA,EACVE,SAAUA,GAGZzF,IACG0F,KAAK,qBAAsBJ,GAC3BpF,KAAK,SAAAC,GAOF,IAAIwF,EAAUxF,EAAIL,KAAK6F,QACvB,GAAe,qBAAZA,EAA+B,CAChCrJ,EAAKC,MAAMiN,aAEXlN,EAAKC,MAAM+J,QAAQC,KADN,cAEO,wBAAZZ,EACRlJ,QAAQC,IAAI,uBACQ,oBAAZiJ,GACRlJ,QAAQC,IAAI,8BAKjB2D,MAAM,SAAAC,GACL7D,QAAQC,IAAI4D,EAAIqF,6CAKf,IAAA5F,EAAAlD,KACPJ,QAAQC,IAAIG,KAAKN,OADV,IAAAQ,EAQHF,KAAKN,MALPuJ,EAHK/I,EAGL+I,UACAsE,EAJKrN,EAILqN,aACAX,EALK1M,EAKL0M,oBACAC,EANK3M,EAML2M,oBACAC,EAPK5M,EAOL4M,kBAEF,OACE1M,EAAAC,EAAAC,cAAA,YACIiN,GACAnN,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,CACEyJ,YAAU,EACVb,UAAWA,EACXc,SAAU,SAAA/E,GAAC,OAAI9B,EAAKmF,aAAarD,IACjCzE,UAAU,gBAEVH,EAAAC,EAAAC,cAACkN,GAAAnN,EAAK2J,IAAN,KACE5J,EAAAC,EAAAC,cAACkN,GAAAnN,EAAK4J,MAAN,CAAYC,GAAIC,KAAKC,GAAG,IAAIC,UAAU,aACpCjK,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKiK,MAAN,mBACAlK,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKkK,QAAN,CACEkD,UAAQ,EACR1M,KAAK,OACLyJ,YAAY,aACZkD,aAAa,SAEftN,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKkK,QAAQoD,SAAd,qBAEFvN,EAAAC,EAAAC,cAACkN,GAAAnN,EAAK4J,MAAN,CAAYC,GAAIC,KAAKC,GAAG,IAAIC,UAAU,YACpCjK,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKiK,MAAN,kBACAlK,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKkK,QAAN,CACEkD,UAAQ,EACR1M,KAAK,OACLyJ,YAAY,YACZkD,aAAa,SAEftN,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKkK,QAAQoD,SAAd,qBAEFvN,EAAAC,EAAAC,cAACkN,GAAAnN,EAAK4J,MAAN,CAAYC,GAAIC,KAAKC,GAAG,IAAIC,UAAU,YACpCjK,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKiK,MAAN,iBACAlK,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKkK,QAAN,CAAcxJ,KAAK,OAAOyJ,YAAY,cACrCoC,GACCxM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,wBAGJH,EAAAC,EAAAC,cAACkN,GAAAnN,EAAK4J,MAAN,CAAYC,GAAIC,KAAKC,GAAG,IAAIC,UAAU,YACpCjK,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKiK,MAAN,iBACAlK,EAAAC,EAAAC,cAACkN,GAAAnN,EAAKkK,QAAN,CAAcxJ,KAAK,WAAWyJ,YAAY,eAG7CqC,GACCzM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,wBAEDuM,GACC1M,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,uCAIFH,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQU,KAAK,UAAb,qBA7IWF,aA4KjBC,GAAqB,CACzB4J,SCrLsB,SAAAA,GACtB,MAAO,CACL3J,KAAM,oBACN2J,aDmLF0C,kBC/K+B,WAC/B,MAAO,CACLrM,KAAM,wBD8KR4L,WC1KwB,WACxB,MAAO,CACL5L,KAAM,eDyKR6M,kBCrK+B,WAC/B,MAAO,CACL7M,KAAM,yBDsKKC,eA7BS,SAACC,GAAU,IAAA4M,EAS7B5M,EAAM6J,gBAPRpC,EAF+BmF,EAE/BnF,SACAE,EAH+BiF,EAG/BjF,SACAK,EAJ+B4E,EAI/B5E,UACAsE,EAL+BM,EAK/BN,aACAX,EAN+BiB,EAM/BjB,oBACAC,EAP+BgB,EAO/BhB,oBACAC,EAR+Be,EAQ/Bf,kBAGF,OADAlN,QAAQC,IAAIoB,GACL,CACLyH,WACAE,WACAK,YACAsE,eACAX,sBACAC,sBACAC,sBAaFhM,GAFaE,CAGbuL,IEpJauB,oLApBX,OACE1N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACyN,EAAD,MACA3N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,KACE5N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAAC3E,KAAK,QAAQ4E,UAAW/J,IACrC/D,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAAC3E,KAAK,QAAQ4E,UAAW3J,IACrCnE,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAAC3E,KAAK,WAAW4E,UAAW1J,IACxCpE,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAAC3E,KAAK,QAAQ4E,UAAWnD,IACrC3K,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAAC3E,KAAK,YAAY4E,UAAWpC,IACzC1L,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAAC3E,KAAK,gBAAgB4E,UAAWC,IAC7C/N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAAC3E,KAAK,SAAS4E,UAAW9F,IACtChI,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAAC3E,KAAK,YAAY4E,UAAW3B,eAdnC1L,aCREuN,QACW,cAA7BC,OAAOzK,SAAS0K,UAEe,UAA7BD,OAAOzK,SAAS0K,UAEhBD,OAAOzK,SAAS0K,SAASC,MACvB,iFClBAC,GAAgB,CACpB9F,SAAU,GACVE,SAAU,GACVK,WAAW,EACXC,UAAU,EACVF,gBAAgB,EAChBG,gCAAgC,EAEhCK,MAAO,IA+BMoB,GA5BM,WAAmC,IAAlC3J,EAAkCwN,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAA1BD,GAAeG,EAAWF,UAAAC,OAAA,EAAAD,UAAA,QAAAlF,EACtD,OAAQoF,EAAO5N,MACb,IAAK,WAAL,IAAA6N,EAMMD,EAAOjE,SAJTzB,EAFJ2F,EAEI3F,UACAC,EAHJ0F,EAGI1F,SACAF,EAJJ4F,EAII5F,eACAG,EALJyF,EAKIzF,+BAEF,OAAOvG,OAAAiM,GAAA,EAAAjM,CAAA,GACF3B,EADL,CAEEgI,UAAWA,EACXC,SAAUA,EACVF,eAAgBA,EAChBG,+BAAgCA,IAEpC,IAAK,WACH,IAAIQ,EAAQgF,EAAOhF,MACnB,OAAO/G,OAAAiM,GAAA,EAAAjM,CAAA,GACF3B,EADL,CAGEuI,MAAOG,IAEX,QACE,OAAO1I,ICnCPuN,GAAgB,CACpB9F,SAAU,GACVE,SAAU,GACVK,WAAW,EACXsE,cAAc,EACdX,qBAAqB,EACrBC,qBAAqB,EACrBC,mBAAmB,GA4CNhC,GAzCS,WAAmC,IAAlC7J,EAAkCwN,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAA1BD,GAAeG,EAAWF,UAAAC,OAAA,EAAAD,UAAA,QAAAlF,EACzD,OAAQoF,EAAO5N,MACb,IAAK,oBAAL,IAAA6N,EAOMD,EAAOjE,SALTzB,EAFJ2F,EAEI3F,UACAsE,EAHJqB,EAGIrB,aACAX,EAJJgC,EAIIhC,oBACAC,EALJ+B,EAKI/B,oBACAC,EANJ8B,EAMI9B,kBAGF,OAAOlK,OAAAiM,GAAA,EAAAjM,CAAA,GACF3B,EADL,CAEEgI,YACAsE,eACAX,sBACAC,sBACAC,sBAEJ,IAAK,sBACH,OAAOlK,OAAAiM,GAAA,EAAAjM,CAAA,GACF3B,EADL,CAEE4L,qBAAqB,IAEzB,IAAK,aACH,OAAOjK,OAAAiM,GAAA,EAAAjM,CAAA,GACF3B,EADL,CAEEsM,cAAc,EACdtE,WAAW,IAEf,IAAK,sBACH,OAAOrG,OAAAiM,GAAA,EAAAjM,CAAA,GACF3B,EADL,CAEE2L,qBAAqB,EACrBC,qBAAqB,IAEzB,QACE,OAAO5L,IC/CPuN,GAAgB,CACpBvO,OAAO,EACPE,UAAU,GAsBGgB,GAnBS,WAAmC,IAAlCF,EAAkCwN,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAA1BD,GAC/B,QADyDC,UAAAC,OAAA,EAAAD,UAAA,QAAAlF,GAC1CxI,MACb,IAAK,gBACH,MAAO,CACLd,OAAO,EACPE,UAAU,GAGd,IAAK,mBACH,MAAO,CACLF,OAAO,EACPE,UAAU,GAGd,QACE,OAAOc,ICpBPuN,GAAgB,CACpB1K,WAAY,GACZF,SAAU,GACVC,SAAU,IAiBGgI,GAdK,WAAmC,IAAlC5K,EAAkCwN,UAAAC,OAAA,QAAAnF,IAAAkF,UAAA,GAAAA,UAAA,GAA1BD,GAAeG,EAAWF,UAAAC,OAAA,EAAAD,UAAA,QAAAlF,EACrD,OAAQoF,EAAO5N,MACb,IAAK,cACH,IAAI4K,EAAgBgD,EAAOhD,cAE3B,OADA/L,QAAQC,IAAI8L,GACL/I,OAAAiM,GAAA,EAAAjM,CAAA,GACF3B,EADL,CAEE0K,kBAEJ,QACE,OAAO1K,ICCP6N,GAAcC,aAAgB,CAClCnE,gBACAE,mBACA3J,mBACA0K,iBAIImD,GAAQC,aAAYH,IAE1BI,IAASC,OACP/O,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CAAUJ,MAAOA,IACf5O,EAAAC,EAAAC,cAAC+O,GAAD,OAEFlD,SAASmD,eAAe,SLkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpM,KAAK,SAAAqM,GACjCA,EAAaC,mCMnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.8e771da1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, withRouter, Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport { clickLogin, clickRegister } from \"../redux/actions/userauthAction\";\nimport ReactDOM from \"react-dom\";\n\nclass UserAuth extends Component {\n\n  loginButton = () => {\n    this.props.clickLogin();\n    console.log(\"clicked login\");\n    \n  };\n\n  registerButton = () => {\n    this.props.clickRegister();\n    console.log(\"clicked register\");\n  };\n\n  componentDidMount() {\n    console.log(this.props.login);\n  }\n\n  render() {\n    let { login, register } = this.props;\n    console.log(login);\n    return (\n      <div className=\"userAuth\">\n        {(login && <Link to={\"/login\"}></Link> ) || (\n          <Button id=\"loginButton\" onClick={this.loginButton}>\n            Login\n            <Link to={\"/login\"}></Link>\n          </Button>\n        )}\n        {register || (\n          <Button id=\"registerButton\" onClick={this.registerButton}>\n            Register\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let { login, register } = state.userauthReducer;\n  return {\n    login,\n    register\n  };\n};\n\nconst mapDispatchToProps = {\n  clickLogin,\n  clickRegister\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(UserAuth));\n","export const clickLogin = () => {\n  return {\n    type: \"CLICKED_LOGIN\"\n  };\n};\n\nexport const clickRegister = () => {\n  return {\n    type: \"CLICKED_REGISTER\"\n  };\n};\n","import React from \"react\";\nimport logo from \"../../assets/donkey.jpg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport UserAuth from \"../Users/UserAuth\"\n\nclass Navbar extends React.Component {\n\n  // Logout function\n  // Basically just clear localstorage\n  logout = async () => {\n    try {\n      // Async await so we to make sure token gets removed before\n      // performing any other tasks\n      console.log(localStorage);\n      await localStorage.removeItem('token');\n      console.log(localStorage);\n      console.log(\"Logged out\");\n    } catch (error) {\n      // Error saving data\n      console.log(\"===Error Line 16 Navbar.js===\");\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n        \n        <a className=\"navbar-brand ml-5\" href=\"#\">\n          <h1>Team 06</h1>\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span>\n            <i className=\"fas fa-bars\" style={{ color: \"#fff\" }} />\n          </span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav m-auto\">\n            <li className=\"nav-item active\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/home\"\n              >\n                Home\n                <i className=\"fas fa-home\" />\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/news\"\n              >\n                news\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/aboutUs\"\n              >\n                About Us\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/post\"\n              >\n                Post\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/category\"\n              >\n                Category\n              </Link>\n            </li>{\" \"}\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/login\"\n              >\n                login\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/register\"\n              >\n                register\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/\"\n                onClick={this.logout}\n              >\n                Logout\n              </Link>\n            </li>\n          </ul>\n          <UserAuth />\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass showPostingss extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/postings\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          data: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    console.log(this.state.data);\n    return (\n      <div>\n        {this.state.data.map(i => {\n          let { id, location, postType, postStatus, picture } = i;\n          return (\n            <tr key={i} className=\"row\">\n              <td>\n                <div>\n                  <p>{id}</p>\n                  <img src={`${id}`}/>\n                  <p>{location}</p>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default showPostingss;\n","import React, { Component } from \"react\";\nimport logo from \"../../assets/donkey.jpg\";\nimport axios from \"axios\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">This is a home page</div>\n        <div>\n          <img src={logo} alt=\"logo\" style={{ width: \"200px\" }} />{\" \"}\n          <img src={logo} alt=\"logo\" style={{ width: \"200px\" }} />{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass News extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">Get your News here</div>\n      </div>\n    );\n  }\n}\n\nexport default News;\n","import React, { Component } from \"react\";\n\nclass AboutUs extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">About Us</div>\n      </div>\n    );\n  }\n}\n\nexport default AboutUs;\n","import React, { Component } from \"react\";\n\nimport { AnchorButton, Intent, ProgressBar } from \"@blueprintjs/core\";\n\nimport _ from \"lodash\";\nimport { Icon } from \"react-icons-kit\";\n\nimport { remove } from \"react-icons-kit/fa/remove\";\nimport \"./assets/DraggableUploader.scss\";\n\nclass DraggableUploader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedFiles: [],\n      fd: \"\",\n      confidence: \"\",\n      diagnosis: \"\"\n      // dataObject: {\n      //   Patient_ID: '',\n      //   Confidence: '',\n      //   Diagnosis: '',\n      // },\n    };\n  }\n\n  onFileLoad(e) {\n    const file = e.currentTarget.files[0];\n    let fd = new FormData();\n    console.log(fd);\n    let fileReader = new FileReader();\n    fd.append(\"image\", file, file.name);\n    this.setState({ fd: fd });\n    fileReader.onload = () => {\n      console.log(\"IMAGE LOADED: \", fileReader.result);\n      const file = {\n        data: fileReader.result,\n        isUploading: false\n      };\n      //Add file\n      this.addLoadedFile(file);\n    };\n\n    fileReader.onabort = () => {\n      alert(\"Reading Aborted\");\n    };\n\n    fileReader.onerror = () => {\n      alert(\"Reading ERROR!\");\n    };\n\n    fileReader.readAsDataURL(file);\n  }\n\n  addLoadedFile(file) {\n    this.setState(prevState => ({\n      loadedFiles: [...prevState.loadedFiles, file]\n    }));\n  }\n\n  removeLoadedFile(file) {\n    //Remove file from the State\n    this.setState(prevState => {\n      let loadedFiles = prevState.loadedFiles;\n      let newLoadedFiles = _.filter(loadedFiles, ldFile => {\n        return ldFile != file;\n      });\n      return { loadedFiles: newLoadedFiles };\n    });\n  }\n\n  removeAllLoadedFile() {\n    this.setState({ loadedFiles: [] });\n  }\n\n  updateLoadedFile(oldFile, newFile) {\n    this.setState(prevState => {\n      const loadedFiles = [...prevState.loadedFiles];\n      _.find(loadedFiles, (file, idx) => {\n        if (file == oldFile) loadedFiles[idx] = newFile;\n      });\n\n      return { loadedFiles };\n    });\n\n    return newFile;\n  }\n\n  onUpload = () => {\n    const { loadedFiles, fd } = this.state;\n    console.log(\"ON UPLOAD...\");\n\n    // loadedFiles.map((file, idx) => {\n    //   console.log(\"Updating...\");\n    //   //Update file (Change it's state to uploading)\n    //   let newFile = this.updateLoadedFile(file, {\n    //     ...file,\n    //     isUploading: true\n    //   });\n\n    //   axios.post('/upload', fd)\n    //     .then(res => {\n    //       console.log(res);\n    //       let filename = res.data;\n    //       axios.get('/')\n    //         .then(res => {\n    //           console.log('hi');\n    //           console.log(res);\n    //           let diagnosis = res.data.diagnosis\n    //           let confidence = res.data.confidence\n    //           // this.setState({\n    //           //   dataObject: {\n    //           //     Confidence: confidence,\n    //           //     Diagnosis: diagnosis,\n    //           //     Patient_ID: '1',\n    //           //   }\n    //           // })\n    //         })\n    //     })\n    //     .catch(err => {\n    //       console.log(err);\n    //     })\n\n    //   //Simulate a REAL WEB SERVER DOING IMAGE UPLOADING\n    //   setTimeout(() => {\n    //     //Get it back to it's original State\n    //     this.updateLoadedFile(newFile, {\n    //       ...newFile,\n    //       isUploading: false\n    //     });\n    //   }, 3000);\n\n    // });\n  };\n\n  render() {\n    const { loadedFiles } = this.state;\n\n    return (\n      <div\n        className=\"inner-container\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div className=\"sub-header\">Drag an Image</div>\n        <div className=\"draggable-container\">\n          <input\n            type=\"file\"\n            id=\"file-browser-input\"\n            name=\"file-browser-input\"\n            ref={input => (this.fileInput = input)}\n            onDragOver={e => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            onDrop={this.onFileLoad.bind(this)}\n            onChange={this.onFileLoad.bind(this)}\n          />\n          <div className=\"files-preview-container ip-scrollbar\">\n            {loadedFiles.map((file, idx) => {\n              return (\n                <div className=\"file\" key={idx}>\n                  <img src={file.data} />\n                  <div className=\"container\">\n                    <span className=\"progress-bar\">\n                      {file.isUploading && <ProgressBar />}\n                    </span>\n                    <span\n                      className=\"remove-btn\"\n                      onClick={() => this.removeLoadedFile(file)}\n                    >\n                      <Icon icon={remove} size={19} />\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"helper-text\">Drag and Drop Images Here</div>\n          <div className=\"file-browser-container\">\n            <AnchorButton\n              text=\"Browse\"\n              intent={Intent.PRIMARY}\n              minimal={true}\n              onClick={() => this.fileInput.click()}\n            />\n          </div>\n        </div>\n        {/* <AnchorButton\n          text=\"Upload\"\n          intent={Intent.SUCCESS}\n          onClick={this\n            .onUpload\n            .bind(this)} /> */}\n        {/* {this.state.dataObject.confidence!='' && this.state.dataObject.diagnosis!='' && <Table data={this.state.dataObject}/>} */}\n      </div>\n    );\n  }\n}\n\nexport default DraggableUploader;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { validateStatus, reRouteAfterCompleteLogin } from \"../redux/actions/loginAction\";\nimport axios from \"axios\";\n\nclass Login extends Component {\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(event.target.children[0]);\n    let username = event.target.children[0].children[0].children[1].value;\n    let password = event.target.children[0].children[1].children[1].value;\n    let obj = {\n      username: username,\n      password: password\n    };\n    console.log(obj);\n    axios\n      .post(\"/userauth/login\", obj)\n      .then(res => {\n        console.log(res);\n\n        // Handle code based on message response from backend\n        let message = res.data.message;\n\n        // Handle if login was successful\n        if (message === \"LOGIN_SUCCESS\") {\n\n          let validate = {\n            USER_NOT_FOUND: false,\n            validated: true,\n            LOOGEDIN: true,\n            INCORRECT_USERNAME_OR_PASSWORD: false\n          }\n          this.props.validateStatus(validate);\n          localStorage.setItem('token', res.data.token);\n          console.log(localStorage)\n\n          let path = \"\";\n\n          // put somet path here where you want to redirect after loging in \n          if(this.props.ROUTE != undefined) {\n            path =  this.props.ROUTE;\n            console.log(path);\n            console.log(this.props.history);\n            this.props.history.push(path);\n          } else {\n            path = \"/\";\n            this.props.history.push(path);\n            console.log(path);\n          } \n        } \n        // If cannot find user \n        else if (message === \"USER_NOT_FOUND\") {\n\n          let notFound = {\n            USER_NOT_FOUND: true,\n            validated: false,\n            LOOGEDIN: false,\n            INCORRECT_USERNAME_OR_PASSWORD: false\n          }\n\n          this.props.validateStatus(notFound);\n        } \n        // If username or password was incorrect.\n        else if (message === \"INCORRECT_USERNAME_OR_PASSWORD\") {\n\n          let incorrectData = {\n            USER_NOT_FOUND: false,\n            validated: false,\n            LOOGEDIN: false,\n            INCORRECT_USERNAME_OR_PASSWORD: true\n          }\n\n          this.props.validateStatus(incorrectData);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    console.log(\"hi\");\n    console.log(this.props.route)\n\n    // get route passed from post page route\n    // We do this so we can redirect back to post page\n    let route = this.props.route\n    this.props.reRouteAfterCompleteLogin(this.props.route);\n  }\n\n  render() {\n    const {\n      validated,\n      LOOGEDIN,\n      INCORRECT_USERNAME_OR_PASSWORD,\n      USER_NOT_FOUND\n    } = this.props;\n    return (\n      <div>\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n            className=\"LoginForm\"\n          >\n            <Form.Row>\n              <Form.Group as={Col} md=\"8\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"User Name\" />\n              </Form.Group>\n              <Form.Group as={Col} md=\"8\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n            </Form.Row>\n            {INCORRECT_USERNAME_OR_PASSWORD && (\n              <p className=\"errorHandler\">Incorrect Username or Password</p>\n            )}\n            {USER_NOT_FOUND && <p className=\"errorHandler\">User not found</p>}\n            <Button type=\"submit\">Login</Button>\n          </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  let { \n    username,\n    password,\n    validated,\n    LOOGEDIN,\n    USER_NOT_FOUND,\n    INCORRECT_USERNAME_OR_PASSWORD,\n    REDIRECT,\n    ROUTE\n  } = state.loginReducer;\n  console.log(state.loginReducer)\n  console.log(state.registerReducer)\n  console.log(state);\n  return {\n    username,\n    password,\n    validated,\n    LOOGEDIN,\n    USER_NOT_FOUND,\n    INCORRECT_USERNAME_OR_PASSWORD,\n    REDIRECT,\n    ROUTE\n  };\n}\n\n// import action functions\n// can also import different actions from different files\nconst mapDispatchToProps = {\n  validateStatus,\n  reRouteAfterCompleteLogin\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Login));\n","export const validateStatus = validate => {\n  return {\n    type: \"VALIDATE\",\n    validate\n  };\n};\n\n// Re routes based on given route after logging in\nexport const reRouteAfterCompleteLogin = route => {\n  return {\n    type: \"REDIRECT\",\n    route\n  }\n}","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DraggableUploader from \"./DraggableUploader\";\nimport Login from \"../Users/Login\";\nimport { updateForm } from \"../redux/actions/postAction\";\n\nclass Post extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     postStatus: \"\",\n  //     location: \"\",\n  //     postType: \"\"\n  //     // discription: \"\n  //   };\n  //   //   this.handleUploadImage = this.handleUploadImage.bind(this);\n  //   this.toggle = this.toggle.bind(this);\n  // }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let { postStatus, location, postType } = this.state;\n    console.log(postStatus, location, postType);\n    axios\n      .post(\"/api/postings\", {\n        postStatus,\n        location,\n        postType\n      })\n      .then(res => {\n        console.log(\"hi\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    console.log();\n  };\n\n  checkPostings = () => {};\n\n  // e is the even of the input text field\n  changeTextField = e => {\n    console.log(e.target.name)\n    let typeIssue = { [e.target.name]: e.target.value };\n    this.props.updateForm(typeIssue);\n  };\n\n  // changePostStatus = e => {\n  //   let inputPostType = e.target.value;\n  //   // this.setState({ postStatus: inputPostType });\n  // };\n\n  // changeLocation = e => {\n  //   let inputLocation = e.target.value;\n  //   this.setState({ location: inputLocation });\n  // };\n\n  // changePostType = e => {\n  //   let inputPostType = e.target.value;\n  //   this.setState({ postType: inputPostType });\n  // };\n\n  // changepostStatus = e => {\n  //   let inputIssue = e.target.value;\n  //   this.setState({ postStatus: inputIssue });\n  // };\n\n  toggle(e) {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    let curToken = localStorage.getItem(\"token\");\n\n    return (\n      <div>\n        {curToken == null && (\n          <p> You must login before you can post anything </p>\n        )}\n        {/* We pass in the route to props for Login because login has a feature\n        to detect any incoming routes to redirect back to that page\n        after logging in  */}\n        {curToken == null ? (\n          <Login route=\"/post\" />\n        ) : (\n          <div\n            className=\"ui form segment text-center\"\n            onSubmit={this.handleSubmit}\n            noValidate\n          >\n            <h3 className=\"text-center text-info\">Post Any Issue</h3>\n            <br />\n            <div className=\"two fields\">\n              <div className=\"field\">\n                <label htmlFor=\"name\">Type Issue</label>\n                <br />\n                <input\n                  // className={formErrors.name.length > 0 ? \"error\" : null}\n                  placeholder=\"Type Issue\"\n                  name=\"postType\"\n                  type=\"text\"\n                  noValidate\n                  onChange={this.changeTextField}\n                />\n\n                {/* {formErrors.name.length > 0 && (\n              <Span className=\"errorMessage\">{formErrors.name}</Span>\n            )} */}\n              </div>\n            </div>\n            <br />\n            <div className=\"two fields\">\n              <div className=\"field\">\n                <label htmlFor=\"name\">Location</label>\n                <br />\n                <input\n                  // className={formErrors.name.length > 0 ? \"error\" : null}\n                  placeholder=\" Location\"\n                  name=\"location\"\n                  type=\"location\"\n                  onChange={this.changeTextField}\n                  noValidate\n                  // onChange={this.handleChange}\n                />\n\n                {/* {formErrors.name.length > 0 && (\n              <Span className=\"errorMessage\">{formErrors.name}</Span>\n            )} */}\n              </div>\n            </div>\n\n            <br />\n            <div className=\"two fields\">\n              <div className=\"field\">\n                <label htmlFor=\"name\">post type</label>\n                <br />\n                <input\n                  // className={formErrors.name.length > 0 ? \"error\" : null}\n                  placeholder=\" post staus\"\n                  name=\"postStatus\"\n                  type=\"post staus\"\n                  onChange={this.changeTextField}\n                  noValidate\n                  // onChange={this.handleChange}\n                />\n\n                {/* {formErrors.name.length > 0 && (\n              <Span className=\"errorMessage\">{formErrors.name}</Span>\n            )} */}\n              </div>\n            </div>\n\n            <br />\n            {/* <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Discription</label>\n\n              <br />\n              <input\n                // className={formErrors.name.length > 0 ? \"error\" : null}\n                placeholder=\" Detail\"\n                name=\"postType\"\n                type=\"postType\"\n                noValidate\n                // onChange={this.handleChange}\n              />\n            </div>\n          </div> */}\n            <br />\n            {/* <Link to=\"/showPostings\">\n            Click Here to check posted items in database\n          </Link> */}\n            {/* <UploadingImage /> */}\n            <DraggableUploader />\n\n            <br />\n            <button className=\"submit button\" onClick={this.handleSubmit}>\n              Submit Issue\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n// import action functions\n// can also import different actions from different files\nconst mapStateToProps = state => {\n  let { postStatus, location, postType } = state.postReducer;\n  return {\n    postStatus,\n    location,\n    postType\n  };\n};\n\nconst mapDispatchToProps = {\n  updateForm\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Post));\n// export default Post;\n","export const updateForm = fieldToChange => {\n  return {\n    type: \"UPDATE_FORM\",\n    fieldToChange\n  };\n};\n","import React, { Component } from \"react\";\n\nclass Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      displayMenu: false\n    };\n    this.showDropdownMenu = this.showDropdownMenu.bind(this);\n    this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\n  }\n  showDropdownMenu(event) {\n    event.preventDefault();\n    this.setState({ displayMenu: true }, () => {\n      document.addEventListener(\"click\", this.hideDropdownMenu);\n    });\n  }\n  hideDropdownMenu() {\n    this.setState({ displayMenu: false }, () => {\n      document.removeEventListener(\"click\", this.hideDropdownMenu);\n    });\n  }\n  render() {\n    return (\n      <div className=\"dropdown\" style={{ background: \"red\", width: \"150px\" }}>\n        <div className=\"button\" onClick={this.showDropdownMenu}>\n          {\" \"}\n          {\"Item Category ^\"}\n        </div>\n        {this.state.displayMenu ? (\n          <ul>\n            <li>\n              <a className=\"active\" href=\"#Plastc\">\n                Plastc\n              </a>\n            </li>\n            <li>\n              <a href=\"#Tree Fall\">Tree Fall</a>\n            </li>\n            <li>\n              <a href=\"#Garbage\">Garbage </a>\n            </li>\n            <li>\n              <a href=\"#Water flood\">Water flood </a>\n            </li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport { validate, formNotFullfilled, registered, userAlreadyExists } from \"../redux/actions/registerAction\";\n\nclass Register extends Component {\n\n  handleSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    let firstName = event.target.children[0].children[0].children[1].value;\n    let lastName = event.target.children[0].children[1].children[1].value;\n    let username = event.target.children[0].children[2].children[1].value;\n    let password = event.target.children[0].children[3].children[1].value;\n\n    // check if names have spacing\n    if (\n      username.includes(\" \") ||\n      firstName.includes(\" \") ||\n      lastName.includes(\" \")\n    ) {\n\n      let validate = {\n        validated: false,\n        registered: false,\n        USER_ALREADY_EXISTS: false,\n        FORM_NOT_FULLFILLED: false,\n        SPACE_IN_USERNAME: true\n      }\n\n      this.props.validate(validate);\n      return 0;\n    }\n\n    // split into arrays to guarentee no spacing\n    let firstName1 = firstName.split(\" \");\n    let lastName1 = lastName.split(\" \");\n    let username1 = username.split(\" \");\n    let password1 = password.split(\" \");\n    \n    // check if any fields are empty\n    // If any field is empty change state in registerReducer of formNotFullfilled to true\n    if (\n      firstName1[0] === \"\" ||\n      lastName1[0] === \"\" ||\n      username1[0] === \"\" ||\n      password1[0] === \"\"\n    ) {\n      console.log(password1)\n      this.props.formNotFullfilled();\n    } else {\n      let obj = {\n        firstname: firstName,\n        lastname: lastName,\n        username: username,\n        password: password\n      };\n\n      axios\n        .post(\"/userauth/register\", obj)\n        .then(res => {\n          \n          // if(res.data.error) {\n          //   let error = res.data.error;\n          //   if(error === \"USER_ALREADY_EXISTS\")            \n          // }\n          // if(res.data.message) {\n            let message = res.data.message;\n            if(message === \"REGISTER_SUCCESS\"){\n              this.props.registered();\n              const path = \"/login\";\n              this.props.history.push(path);          \n            } else if(message === \"USER_ALREADY_EXISTS\") {\n              console.log(\"user already exists\");\n            } else if(message === \"ERR_NO_PASSWORD\") {\n              console.log(\"handle no password error\")\n            }\n          // }\n\n        })\n        .catch(err => {\n          console.log(err.message);\n        });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      validated,\n      isRegistered,\n      USER_ALREADY_EXISTS,\n      FORM_NOT_FULLFILLED,\n      SPACE_IN_USERNAME\n    } = this.props;\n    return (\n      <div>\n        {!isRegistered && (\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n            className=\"RegisterForm\"\n          >\n            <Form.Row>\n              <Form.Group as={Col} md=\"4\" controlId=\"firstName\">\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"First name\"\n                  defaultValue=\"Mark\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"4\" controlId=\"lastName\">\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"Last name\"\n                  defaultValue=\"Otto\"\n                />\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"8\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"User Name\" />\n                {USER_ALREADY_EXISTS && (\n                  <p className=\"errorHandler\">User already exists</p>\n                )}\n              </Form.Group>\n              <Form.Group as={Col} md=\"8\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n            </Form.Row>\n            {FORM_NOT_FULLFILLED && (\n              <p className=\"errorHandler\">Please fill out form</p>\n            )}\n            {SPACE_IN_USERNAME && (\n              <p className=\"errorHandler\">\n                No spaces are allowed as characters\n              </p>\n            )}\n            <Button type=\"submit\">Register</Button>\n          </Form>\n        )}\n        {/* {registered && <Login />} */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  let {\n    username,\n    password,\n    validated,\n    isRegistered,\n    USER_ALREADY_EXISTS,\n    FORM_NOT_FULLFILLED,\n    SPACE_IN_USERNAME \n  } = state.registerReducer;\n  console.log(state);\n  return {\n    username,\n    password,\n    validated,\n    isRegistered,\n    USER_ALREADY_EXISTS,\n    FORM_NOT_FULLFILLED,\n    SPACE_IN_USERNAME \n  };\n}\n\nconst mapDispatchToProps = {\n  validate,\n  formNotFullfilled,\n  registered,\n  userAlreadyExists\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Register);\n","export const validate = validate => {\n  return {\n    type: \"REGISTER_VALIDATE\",\n    validate\n  };\n};\n\nexport const formNotFullfilled = () => {\n  return {\n    type: \"FORM_NOT_FULLFILLED\"\n  };\n};\n\nexport const registered = () => {\n  return {\n    type: \"REGISTERED\"\n  };\n};\n\nexport const userAlreadyExists = () => {\n  return {\n    type: \"USER_ALREADY_EXISTS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/layout/Navbar\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\n// Import Pages\nimport showPostings from \"./components/pages/showPostings\";\nimport Home from \"./components/pages/Home\";\nimport News from \"./components/pages/News\";\nimport AboutUs from \"./components/pages/AboutUs\";\nimport Post from \"./components/pages/Post\";\nimport Category from \"./components/pages/Category\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Login from \"./components/Users/Login\";\nimport Register from \"./components/Users/Register\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/news\" component={News} />\n            <Route exact path=\"/aboutUs\" component={AboutUs} />\n            <Route exact path=\"/post\" component={Post} />\n            <Route exact path=\"/category\" component={Category} />\n            <Route exact path=\"/showPostings\" component={showPostings} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\n  username: \"\",\n  password: \"\",\n  validated: false,\n  LOOGEDIN: false,\n  USER_NOT_FOUND: false,\n  INCORRECT_USERNAME_OR_PASSWORD: false,\n  // REDIRECT: false,\n  ROUTE: \"\",\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"VALIDATE\":\n      let {\n        validated,\n        LOOGEDIN,\n        USER_NOT_FOUND,\n        INCORRECT_USERNAME_OR_PASSWORD\n      } = action.validate;\n      return {\n        ...state,\n        validated: validated,\n        LOOGEDIN: LOOGEDIN,\n        USER_NOT_FOUND: USER_NOT_FOUND,\n        INCORRECT_USERNAME_OR_PASSWORD: INCORRECT_USERNAME_OR_PASSWORD\n      };\n    case \"REDIRECT\":\n      let route = action.route\n      return {\n        ...state,\n        // REDIRECT: true,\n        ROUTE: route\n      }\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","const INITIAL_STATE = {\n  username: \"\",\n  password: \"\",\n  validated: false,\n  isRegistered: false,\n  USER_ALREADY_EXISTS: false,\n  FORM_NOT_FULLFILLED: false,\n  SPACE_IN_USERNAME: false\n};\n\nconst registerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"REGISTER_VALIDATE\":\n      let {\n        validated,\n        isRegistered,\n        USER_ALREADY_EXISTS,\n        FORM_NOT_FULLFILLED,\n        SPACE_IN_USERNAME\n      } = action.validate;\n\n      return {\n        ...state,\n        validated,\n        isRegistered,\n        USER_ALREADY_EXISTS,\n        FORM_NOT_FULLFILLED,\n        SPACE_IN_USERNAME\n      };\n    case \"FORM_NOT_FULLFILLED\":\n      return {\n        ...state,\n        FORM_NOT_FULLFILLED: true\n      };\n    case \"REGISTERED\":\n      return {\n        ...state,\n        isRegistered: true,\n        validated: true\n      };\n    case \"USER_ALREADY_EXISTS\":\n      return {\n        ...state,\n        USER_ALREADY_EXISTS: true,\n        FORM_NOT_FULLFILLED: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default registerReducer;\n","const INITIAL_STATE = {\n  login: false,\n  register: false\n};\n\nconst userauthReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"CLICKED_LOGIN\":\n      return {\n        login: true,\n        register: false\n      };\n\n    case \"CLICKED_REGISTER\":\n      return {\n        login: false,\n        register: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userauthReducer;\n","const INITIAL_STATE = {\n  postStatus: \"\",\n  location: \"\",\n  postType: \"\"\n};\n\nconst postReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"UPDATE_FORM\":\n      let fieldToChange = action.fieldToChange;\n      console.log(fieldToChange);\n      return {\n        ...state,\n        fieldToChange\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import redux\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\n// import reducers\nimport loginReducer from \"./components/redux/reducers/loginReducer\";\nimport registerReducer from \"./components/redux/reducers/registerReducer\";\nimport userauthReducer from \"./components/redux/reducers/userauthReducer\"\nimport postReducer from \"./components/redux/reducers/postReducer\"\n\n// combine reducers\nconst rootReducer = combineReducers({\n  loginReducer,\n  registerReducer,\n  userauthReducer,\n  postReducer\n});\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/donkey.920876bf.jpg\";"],"sourceRoot":""}