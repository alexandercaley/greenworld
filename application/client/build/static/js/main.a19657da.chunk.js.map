{"version":3,"sources":["assets/donkey.jpg","components/pages/HomepageList/uploads/b.png","components/redux/actions/loginAction.js","components/Users/UserAuth.js","components/redux/actions/userauthAction.js","components/redux/actions/homepageAction.js","components/pages/Home.js","components/layout/Navbar.js","components/pages/ImageUpload.js","components/redux/actions/postAction.js","components/pages/PostForm.js","components/Users/Login.js","components/pages/Post.js","components/Users/Register.js","components/redux/actions/registerAction.js","components/pages/HomepageList/Marker.js","components/pages/HomepageList/ProductDetails.js","App.js","serviceWorker.js","components/redux/reducers/loginReducer.js","components/redux/reducers/registerReducer.js","components/redux/reducers/userauthReducer.js","components/redux/reducers/postReducer.js","components/redux/reducers/homepageReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","reRouteAfterCompleteLogin","route","type","UserAuth","loginButton","_this","props","clickLogin","history","push","console","log","registerButton","clickRegister","logoutButton","_callee","regenerator_default","a","wrap","_context","prev","next","localStorage","removeItem","t0","stop","curToken","getItem","react_default","createElement","className","Button_default","id","onClick","this","Component","mapDispatchToProps","logout","connect","state","_state$userauthReduce","userauthReducer","login","register","LOGGEDIN","loginReducer","withRouter","updateData","data","updateClickedDetails","index","tempObj","handleIndex","updateHomepage","bool","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","goToDetails","clickedItem","somedata","_this2","forceUpdate","axios","get","then","res","toUpdateHomepage","_this2$props","search","searchFilter","filter","x","issueType","toLowerCase","includes","setState","_this3","Container","Row","Fragment","map","i","src","require","alt","style","height","street","city","zipcode","description","_state$homepageReduce","homepageReducer","details_id","pageIndex","Navbar","handleSearch","event","preventDefault","_this$props","handleChange","searchInput","target","value","updateSearch","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","color","react_router_dom","to","pathname","onSubmit","name","placeholder","onChange","Users_UserAuth","input","ImageUpload","e","imageFile","currentTarget","files","fileReader","FileReader","onFileLoad","onload","result","file","isUploading","addLoadedFile","onabort","alert","onerror","readAsDataURL","removeAllLoadedFile","loadedFiles","display","flexDirection","ref","fileInput","onDragOver","stopPropagation","onDrop","bind","idx","key","progressBar","removeLoadedFile","react_icons_kit","icon","remove","size","buttons","text","intent","Intent","PRIMARY","minimal","click","imageToAdd","newImage","postState","_postState$postReduce","postReducer","fd","PostForm","getLocation","options","enableHighAccuracy","timeout","maximumAge","isLoading","navigator","geolocation","getCurrentPosition","success","error","pos","crd","coords","setGeoLocation","doneLoading","err","errGetLocation","warn","concat","code","message","handleSubmit","undefined","needsToLogin","latitude","longitude","username","user_id","formData","FormData","append","method","url","config","headers","Content-Type","catch","handleChangeInput","defineProperty","updateForm","_this$props2","locationError","geoLocationIsLoading","noValidate","htmlFor","pages_ImageUpload","fieldToChange","location","resetReducer","postStatus","postType","Login","children","password","obj","post","ROUTE","validateStatus","USER_NOT_FOUND","validated","INCORRECT_USERNAME_OR_PASSWORD","finishedLoggingIn","setItem","token","path","length","goBack","nextProps","TRIED_POSTING_ISSUE","Form","Group","as","Col","md","controlId","Label","Control","es_Button","validate","_state$loginReducer","REDIRECT","registerReducer","Post","pages_PostForm","Register","componentDidMount","firstName","lastName","email","registered","USER_ALREADY_EXISTS","FORM_NOT_FULLFILLED","SPACE_IN_USERNAME","firstName1","split","lastName1","email1","username1","password1","formNotFullfilled","firstname","lastname","userAlreadyExists","isRegistered","Form_default","required","defaultValue","Feedback","_state$registerReduce","Marker","backgroundColor","cursor","title","ProductDetails","detailsData","imgObj","imagepath","_this$props$detailsDa","postings_created_date","JSON","parse","filename","lat","lng","width","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","pages_HomepageList_Marker","defaultProps","zoom","App","layout_Navbar","react_router","exact","component","Boolean","window","hostname","match","INITIAL_STATE","arguments","action","_action$validate","objectSpread","keyName","_action$location","toConsumableArray","_action$tempObj","rootReducer","combineReducers","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a19657da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donkey.920876bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/b.d4e99edf.png\";","export const validateStatus = validate => {\n  return {\n    type: \"VALIDATE\",\n    validate\n  };\n};\n\n// Re routes based on given route after logging in\nexport const reRouteAfterCompleteLogin = route => {\n  return {\n    type: \"REDIRECT\",\n    route\n  }\n}\n\n// Re routes based on given route after logging in\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, withRouter, Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport { clickLogin, clickRegister } from \"../redux/actions/userauthAction\";\nimport { logout } from \"../redux/actions/loginAction\";\nimport ReactDOM from \"react-dom\";\n\nclass UserAuth extends Component {\n  loginButton = () => {\n    this.props.clickLogin();\n    this.props.history.push(\"/login\");\n    console.log(\"clicked login\");\n  };\n\n  registerButton = () => {\n    this.props.clickRegister();\n    this.props.history.push(\"/register\");\n    console.log(\"clicked register\");\n  };\n\n  logoutButton = async () => {\n    try {\n      // Async await so we to make sure token gets removed before\n      // performing any other tasks\n      await localStorage.removeItem('token');\n      this.props.history.push(\"/\");\n    } catch (error) {\n      // Error saving data\n      console.log(error);\n    }\n  };\n  \n  render() {\n    let curToken = localStorage.getItem(\"token\");\n    console.log();\n    return (\n      <div className=\"userAuth\">\n        {curToken && (\n          <Button id=\"loginButton\" onClick={this.logoutButton}>\n            Logout\n          </Button>\n        )}\n        {!curToken && (\n          <Button id=\"loginButton\" onClick={this.loginButton}>\n            Login\n          </Button>\n        )}\n        {!curToken && (\n          <Button id=\"registerButton\" onClick={this.registerButton}>\n            Register\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let { login, register } = state.userauthReducer;\n  let { LOGGEDIN } = state.loginReducer;\n  return {\n    login,\n    register,\n    LOGGEDIN\n  };\n};\n\nconst mapDispatchToProps = {\n  clickLogin,\n  clickRegister,\n  logout\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(UserAuth));\n","export const clickLogin = () => {\n  return {\n    type: \"CLICKED_LOGIN\"\n  };\n};\n\nexport const clickRegister = () => {\n  return {\n    type: \"CLICKED_REGISTER\"\n  };\n};\n","export const updateData = data => {\n    console.log(data)\n    return {\n        type: \"UPDATE_DATA\",\n        data\n    }\n}\n\nexport const updateClickedDetails = (id, index) => {\n    let tempObj = {id, index};\n    return {\n        type: \"CLICKED_ISSUE_DETAILS\",\n        tempObj\n    }\n}\n\nexport const handleIndex = index => {\n    return {\n        type: \"UPDATE_INDEX\",\n        index\n    }\n}\n\nexport const updateSearch = input => {\n    return {\n        type: \"UPDATE_SEARCH\",\n        input\n    }\n}\n\nexport const updateHomepage = bool => {\n    return {\n        type: \"UPDATE_HOMEPAGE\",\n        bool\n    }\n}\n\nexport const clickedItem = data => {\n    return {\n        type: \"CLICKED_ITEM\",\n        data\n    }\n}","import React, { Component } from \"react\";\nimport { Dropdown, Navbar } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Container, Row } from \"reactstrap\";\n\nimport {\n  updateData,\n  updateClickedDetails,\n  handleIndex,\n  updateHomepage,\n  clickedItem\n} from \"../redux/actions/homepageAction\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      somedata: []\n    };\n  }\n\n  componentDidMount() {\n    // when homepage mounts, get all data from backend\n    // and store it in store\n    this.forceUpdate();\n    console.log(\"line 35 ======\");\n    axios.get(\"/api/postings\").then(res => {\n      console.log(\"=======================================\");\n      let { data } = res;\n      console.log(this.props.toUpdateHomepage);\n\n      if (this.props.toUpdateHomepage == true) {\n        this.props.updateHomepage(false);\n        let { data, search } = this.props;\n        console.log(data, search);\n        var searchFilter = data.filter(x => {\n          // console.log(x)\n          return x.issueType.toLowerCase().includes(search.toLowerCase());\n        });\n        this.setState({\n          somedata: searchFilter\n        });\n        console.log(searchFilter);\n        console.log(\"=======================================\");\n        this.props.updateData(searchFilter);\n        this.forceUpdate();\n      } else {\n        this.props.updateData(data);\n        this.setState({\n          somedata: data\n        });\n        this.forceUpdate();\n      }\n    });\n  }\n\n  goToDetails = data => {\n    console.log(data);\n    const path = \"/productdetails\";\n    this.props.clickedItem(data);\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { data } = this.props;\n    const { somedata } = this.state;\n    return (\n      <div>\n        <Container className=\"mt-2\">\n          <Row>\n            <div className=\"container my-6\">\n            </div>\n            <React.Fragment>\n              <div className=\"rwo\" />\n              <div className=\"container my-6\">\n                <div className=\"row\">\n                  {somedata.map(i => {\n                    return (\n                      <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\n                        <div onClick={() => this.goToDetails(i)}>\n                          <div className=\"card\">\n                            <img\n                              src={require(\"./HomepageList/uploads/b.png\")}\n                              className=\"img-card-top\"\n                              alt=\"Issue Image\"\n                              style={{ height: \"14rem\" }}\n                            />\n                            <div className=\"card-body text-capitalized\">\n                              <h6>Street: {i.street}</h6>\n                              <h6>City: {i.city}</h6>\n                              <h6>Zipcode: {i.zipcode}</h6>\n                              <h6>State: {i.state}</h6>\n                              <h6 className=\"text-warning text-slanted\">\n                                Issue Type: {i.issueType}\n                              </h6>\n                              <h6 className=\"text-warning text-slanted\">\n                                Description: {i.description}\n                              </h6>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </React.Fragment>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let {\n    data,\n    details_id,\n    pageIndex,\n    search,\n    toUpdateHomepage\n  } = state.homepageReducer;\n  return { data, details_id, pageIndex, search, toUpdateHomepage };\n};\n\nconst mapDispatchToProps = {\n  updateData,\n  updateClickedDetails,\n  handleIndex,\n  updateHomepage,\n  clickedItem\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Home));\n","import React, { Component } from \"react\";\nimport logo from \"../../assets/donkey.jpg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport UserAuth from \"../Users/UserAuth\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  updateData,\n  updateClickedDetails,\n  handleIndex,\n  updateSearch,\n  updateHomepage\n} from \"../redux/actions/homepageAction\";\n\nimport Home from \"../pages/Home\";\n\n// import DropdownMenu from \"../pages/DropdownMenu\";\nclass Navbar extends Component {\n  handleSearch = event => {\n    event.preventDefault();\n    this.props.updateHomepage(true);\n    this.forceUpdate();\n    // console.log(\"line 35 ======\");\n    axios.get(\"/api/postings\").then(res => {\n      // console.log(\"=======================================\");\n      let { data } = res;\n\n      if (this.props.toUpdateHomepage == true) {\n        this.props.updateHomepage(false);\n        let { data, search } = this.props;\n        console.log(data, search);\n        var searchFilter = data.filter(x => {\n          // console.log(x)\n          return x.issueType.toLowerCase().includes(search.toLowerCase());\n        });\n        // this.setState({\n        //   somedata: searchFilter\n        // });\n        // console.log(searchFilter);\n        // console.log(\"=======================================\");\n        this.props.updateData(searchFilter);\n        this.forceUpdate();\n      } else {\n        this.props.updateData(data);\n        this.setState({\n          somedata: data\n        });\n        this.forceUpdate();\n      }\n    });\n    const path = \"/home\";\n    this.props.history.push(path);    \n  };\n\n  handleChange = event => {\n    // console.log(event.target.search.value);\n    let searchInput = event.target.value;\n    console.log(searchInput);\n    this.props.updateSearch(searchInput);\n  };\n\n  render() {\n    const { search } = this.props;\n    // console.log(search);\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n          <a className=\"navbar-brand ml-5\" href=\"#\">\n            <h1>Team 06</h1>\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span>\n              <i className=\"fas fa-bars\" style={{ color: \"#fff\" }} />\n            </span>\n          </button>\n\n          <ul className=\"navbar-nav m-auto\">\n            <li className=\"nav-item active\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/home\"\n              >\n                Home\n                <i className=\"fas fa-home\" />\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to={{pathname:\"/post\",state: this.props.search}}\n                \n              >\n                Post\n              </Link>\n            </li>\n          </ul>\n          <form className=\"search\" onSubmit={this.handleSearch}>\n            <input\n              type=\"text\"\n              className=\"searchInput\"\n              name=\"search\"\n              value={ search }\n              placeholder=\"Search by\"\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\" className=\"searchButton\">\n              Search\n              <i className=\"fas fa-search\" />\n            </button>\n          </form>\n          <UserAuth />\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\n// export default Navbar;\n// export default Products;\nconst mapStateToProps = state => {\n  let { data, details_id, pageIndex, search } = state.homepageReducer;\n  return { data, details_id, pageIndex, search };\n};\n\nconst mapDispatchToProps = {\n  updateData,\n  updateClickedDetails,\n  handleIndex,\n  updateSearch,\n  updateHomepage\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Navbar));\n","import React, { Component } from \"react\";\n\nimport { AnchorButton, Intent, ProgressBar } from \"@blueprintjs/core\";\nimport { Icon } from \"react-icons-kit\";\n\nimport { remove } from \"react-icons-kit/fa/remove\";\nimport \"./assets/DraggableUploader.scss\";\nimport {\n  addLoadedFile,\n  removeAllLoadedFile,\n  onFileLoad,\n} from \"../redux/actions/postAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass ImageUpload extends Component {\n\n  // Utilizing formData to get image from user\n  onFileLoad(e) {\n    const imageFile = e.currentTarget.files[0];\n    console.log(imageFile);\n    let fileReader = new FileReader();\n\n    this.props.onFileLoad(imageFile);\n    fileReader.onload = () => {\n      console.log(fileReader.result)\n      const file = {\n        data: fileReader.result,\n        isUploading: false\n      };\n      //Add file\n      this.addLoadedFile(file);\n    };\n\n    fileReader.onabort = () => {\n      alert(\"Reading Aborted\");\n    };\n\n    fileReader.onerror = () => {\n      alert(\"Reading ERROR!\");\n    };\n\n    fileReader.readAsDataURL(imageFile);\n  }\n\n  addLoadedFile(file) {\n    this.props.addLoadedFile(file);\n  }\n\n  removeLoadedFile(file) {\n    this.props.removeAllLoadedFile();\n  }\n\n  render() {\n    let { loadedFiles } = this.props;\n    console.log(loadedFiles);\n    return (\n      <div\n        className=\"inner-container\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div className=\"sub-header\">Drag an Image</div>\n        <div className=\"draggable-container\">\n          <input\n            type=\"file\"\n            id=\"file-browser-input\"\n            name=\"file-browser-input\"\n            ref={input => (this.fileInput = input)}\n            onDragOver={e => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            onDrop={this.onFileLoad.bind(this)}\n            onChange={this.onFileLoad.bind(this)}\n          />\n          <div className=\"files-preview-container ip-scrollbar\">\n            {loadedFiles.map((file, idx) => {\n              return (\n                <div className=\"file\" key={idx}>\n                  <img src={file.data} />\n                  <div className=\"container\">\n                    <span className=\"progress-bar\">\n                      {file.isUploading && <ProgressBar />}\n                    </span>\n                    <span\n                      className=\"remove-btn\"\n                      onClick={() => this.removeLoadedFile(file)}\n                    >\n                      <Icon icon={remove} size={19} />\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"helper-text\">Drag and Drop Images Here</div>\n          <div className=\"file-browser-container\">\n            <AnchorButton\n              text=\"Browse\"\n              intent={Intent.PRIMARY}\n              minimal={true}\n              onClick={() => this.fileInput.click()}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = postState => {\n  // let { postStatus, location, postType } = state.postReducer;\n  let {\n    fd,\n    file,\n    imageFile,\n    loadedFiles\n  } = postState.postReducer;\n  return {\n    fd,\n    file,\n    imageFile,\n    loadedFiles\n  };\n};\n\nconst mapDispatchToProps = {\n  addLoadedFile,\n  removeAllLoadedFile,\n  onFileLoad,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(ImageUpload));\n","export const updateForm = fieldToChange => {\n  return {\n    type: \"UPDATE_FORM\",\n    fieldToChange\n  };\n};\n\nexport const setGeoLocation = location => {\n  return {\n    type: \"UPDATE_GEOLOCATION\",\n    location\n  }\n}\n\nexport const errGetLocation = () => {\n  return {\n    type: \"ERR_GET_LOCATION\",\n  }\n}\n\nexport const onFileLoad = newImage => {\n  return {\n    type: \"LOAD_IMAGE\",\n    newImage\n  };\n};\n\nexport const addLoadedFile = imageToAdd => {\n  return {\n    type: \"ADD_TO_IMAGE_LIST\",\n    imageToAdd\n  }\n}\n\nexport const removeAllLoadedFile = () => {\n  return {\n    type: \"REMOVE_ALL\",\n  }\n\n}\n\nexport const resetReducer = () => {\n  return {\n    type: \"RESET_REDUCER\"\n  }\n}\n\nexport const isLoading = () => {\n  return {\n    type: \"GEO_LOCATION_LOADING\"\n  }\n}\nexport const doneLoading = () => {\n  return {\n    type: \"GEO_LOCATION_DONE_LOADING\"\n  }\n}\n\nexport const needsToLogin = () => {\n  return {\n    type: \"TRIED_POSTING_ISSUE\"\n  }\n}\n\nexport const finishedLoggingIn = () => {\n  return {\n    type: \"FINISHED_LOGGING_IN_AFTER_TRYING_TO_POST\"\n  }\n} \n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport ImageUpload from \"./ImageUpload\";\nimport {\n  updateForm,\n  setGeoLocation,\n  errGetLocation,\n  resetReducer,\n  isLoading,\n  doneLoading,\n  needsToLogin,  \n} from \"../redux/actions/postAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass PostForm extends Component {\n  // austin tsang\n  // get users geo location\n  getLocation = async () => {\n    let options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n\n    this.props.isLoading();\n\n    // dont perform anything until get coordinates\n    await navigator.geolocation.getCurrentPosition(\n      this.success,\n      this.error,\n      options\n    );\n  };\n\n  // success function getCurrentPosition\n  success = pos => {\n    // set coordinates to props, actions\n    // will handle the coordinates like latitude and longitude.\n    let crd = pos.coords;\n    this.props.setGeoLocation(crd);\n    this.props.doneLoading();\n  };\n\n  // Error function for getCurrentPosition parameter\n  error = err => {\n    // set error if no geolaction here\n    this.props.errGetLocation();\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  };\n\n  // When user submits issue\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const curToken = localStorage.getItem(\"token\");\n\n    // If user is not logged in, send them to login page\n    // and give message that they need to login before they \n    // can finish posting\n    if(curToken == undefined || curToken == \"\") {\n      // run action to set needsToLogin to true\n      this.props.needsToLogin();\n      this.props.history.push(\"/login\");\n    } else {\n      console.log(this.props);\n      let {\n        latitude,\n        longitude,\n        imageFile,\n        zipcode,\n        street,\n        city,\n        issueType,\n        state,\n        description\n      } = this.props;\n\n      if(latitude == \"\" || longitude == \"\") {\n        latitude = 0.0000000;\n        longitude = 0.0000000;\n      }\n      \n      console.log(latitude, longitude);\n      console.log(imageFile);\n      let username = localStorage.getItem('username');\n      let user_id = localStorage.getItem('user_id')\n      let formData = new FormData();\n      \n      formData.append(\"imageFile\", imageFile);\n      formData.append(\"latitude\", latitude);\n      formData.append(\"longitude\", longitude);\n      formData.append(\"street\", street);\n      formData.append(\"city\", city);\n      formData.append(\"state\", state);\n      formData.append(\"zipcode\", zipcode);\n      formData.append(\"issueType\", issueType);\n      formData.append(\"username\", username);\n      formData.append(\"description\", description);\n      formData.append(\"user_id\", user_id);\n      \n      // specify we are sending form data\n      axios({\n        method: \"post\",\n        url: \"/api/postings\",\n        data: formData,\n        config: { headers: { \"Content-Type\": \"multipart/form-data\" } }\n      })\n        .then(res => {\n          // formData.forEach(key => {\n          //   formData.delete(key);\n          // });\n          // this.props.resetReducer();\n          console.log(res);\n          if(res.data == \"SUCCESS\") {\n            this.props.history.push(\"/home\");\n          }\n          \n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  // One function handles all input changnes\n  handleChangeInput = e => {\n    console.log(e.target.value);\n    let input = { [e.target.name]: e.target.value };\n    console.log(input);\n    this.props.updateForm(input);\n  };\n\n  render() {\n    let {\n      issueType,\n      longitude,\n      latitude,\n      street,\n      city,\n      state,\n      zipcode,\n      locationError,\n      geoLocationIsLoading\n    } = this.props;\n    return (\n      <div>\n        <div\n          className=\"ui form segment text-center\"\n          onSubmit={this.handleSubmit}\n          noValidate\n        >\n          <h3 className=\"text-center text-info\">Post Any Issue</h3>\n          <br />\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Select Type of Issue...</label>\n              <br />\n              <select\n                name={\"issueType\"}\n                value={issueType}\n                onChange={this.handleChangeInput}\n              >\n                <option name={\"\"} value=\"\" />\n                <option name={\"Air\"} value=\"Air\">\n                  Air\n                </option>\n                <option value=\"Water\">Water</option>\n                <option value=\"Garbage\">Garbage</option>\n                <option value=\"Hazardous Waste\">Hazardous Waste</option>\n                <option value=\"Natural Hazard\">Natural Hazard</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Street</label>\n              <br />\n              <input\n                placeholder=\"Enter Street Name...\"\n                name=\"street\"\n                value={street}\n                type=\"text\"\n                onChange={this.handleChangeInput}\n                noValidate\n              />\n            </div>\n          </div>\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">City</label>\n              <br />\n              <input\n                placeholder=\"Enter City...\"\n                name=\"city\"\n                type=\"text\"\n                value={city}\n                onChange={this.handleChangeInput}\n                noValidate\n              />\n            </div>\n          </div>\n\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">State</label>\n              <br />\n              <input\n                placeholder=\"Enter State...\"\n                name=\"state\"\n                type=\"text\"\n                value={state}\n                onChange={this.handleChangeInput}\n                noValidate\n              />\n            </div>\n          </div>\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">ZipCode</label>\n              <br />\n              <input\n                placeholder=\"Enter Zipcode...\"\n                name=\"zipcode\"\n                type=\"text\"\n                value={zipcode}\n                onChange={this.handleChangeInput}\n                noValidate\n              />\n            </div>\n          </div>\n          <br />\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Location</label>\n              <br />\n              <button onClick={this.getLocation}> Add location</button>\n              <br />\n              {locationError != \"\" &&\n                \"there was an error getting your location\"}\n              <br />\n              {geoLocationIsLoading && \"Getting location...\"}\n              <br />\n              Longitude: {longitude != \"\" && longitude}\n              <br />\n              Latitude: {latitude != \"\" && latitude}\n            </div>\n          </div>\n          <br />\n          <ImageUpload />\n          <br />\n          Description\n          <br />\n          <textarea name=\"description\" onChange={this.handleChangeInput} />\n          <br />\n          <button className=\"submit button\" onClick={this.handleSubmit}>\n            Submit Issue\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = postState => {\n  let {\n    postStatus,\n    location,\n    postType,\n    latitude,\n    longitude,\n    street,\n    city,\n    state,\n    zipcode,\n    issueType,\n    description,\n    imageFile,\n    locationError,\n    geoLocationIsLoading\n  } = postState.postReducer;\n  return {\n    postStatus,\n    location,\n    postType,\n    latitude,\n    longitude,\n    street,\n    city,\n    state,\n    zipcode,\n    issueType,\n    description,\n    imageFile,\n    locationError,\n    geoLocationIsLoading\n  };\n};\n\nconst mapDispatchToProps = {\n  updateForm,\n  setGeoLocation,\n  errGetLocation,\n  resetReducer,\n  isLoading,\n  doneLoading,\n  needsToLogin\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(PostForm));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { validateStatus, reRouteAfterCompleteLogin } from \"../redux/actions/loginAction\";\nimport { finishedLoggingIn } from \"../redux/actions/postAction\";\nimport axios from \"axios\";\n\nclass Login extends Component {\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(event.target.children[0]);\n    let username = event.target.children[0].children[0].children[1].value;\n    let password = event.target.children[0].children[1].children[1].value;\n    let obj = {\n      username: username,\n      password: password\n    };\n    console.log(obj);\n    axios\n      .post(\"/userauth/login\", obj)\n      .then(res => {\n        console.log(res);\n        console.log(this.props.ROUTE)\n        // Handle code based on message response from backend\n        let message = res.data.message;\n\n        // Handle if login was successful\n        if (message === \"LOGIN_SUCCESS\") {\n\n          let validate = {\n            USER_NOT_FOUND: false,\n            validated: true,\n            LOGGEDIN: true,\n            INCORRECT_USERNAME_OR_PASSWORD: false\n          }\n          this.props.validateStatus(validate);\n          this.props.finishedLoggingIn();\n          localStorage.setItem('token', res.data.token);\n          localStorage.setItem('user_id', res.data.result[0].id)\n          localStorage.setItem('username', username)\n          \n          let path = \"\";\t\n          // to figure out what was the last route\n          let historyLength = this.props.history.length - 1;\n          \n           // put somet path here where you want to redirect after loging in \t\n          if(this.props.ROUTE == \"/register\") {\t\n            // path =  this.props.ROUTE;\t\n            // console.log(path);\t\n            // console.log(this.props.history);\t\n            // this.props.history.push(path);\t\n            this.props.reRouteAfterCompleteLogin(\"/\");\n            path = \"/\";\t\n            console.log(path);\t\n            this.props.history.push(path);\t\n          } else {\n            this.props.history.goBack();\n          } \n        }\n        // If cannot find user \n        else if (message === \"USER_NOT_FOUND\") {\n\n          let notFound = {\n            USER_NOT_FOUND: true,\n            validated: false,\n            LOGGEDIN: false,\n            INCORRECT_USERNAME_OR_PASSWORD: false\n          }\n\n          this.props.validateStatus(notFound);\n        }\n        // If username or password was incorrect.\n        else if (message === \"INCORRECT_USERNAME_OR_PASSWORD\") {\n\n          let incorrectData = {\n            USER_NOT_FOUND: false,\n            validated: false,\n            LOGGEDIN: false,\n            INCORRECT_USERNAME_OR_PASSWORD: true\n          }\n\n          this.props.validateStatus(incorrectData);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(this.props.location)\n    console.log(nextProps.location);\n    if (nextProps.location !== this.props.location) {\n      console.log(\"line 94\")\n    }\n  }\n\n  componentDidMount() {\t\n    console.log(\"hi\");\t\n    console.log(this.props.ROUTE)\n\n    // get route passed from post page route\t\n    // We do this so we can redirect back to post page\t\n    let route = this.props.ROUTE\t\n    // this.props.reRouteAfterCompleteLogin(this.props.route);\t\n  }\n\n  render() {\n    const {\n      validated,\n      LOGGEDIN,\n      INCORRECT_USERNAME_OR_PASSWORD,\n      USER_NOT_FOUND,\n      TRIED_POSTING_ISSUE\n    } = this.props;\n    return (\n      <div>\n          {TRIED_POSTING_ISSUE == true && \"Please Login Before Posting Item\"}\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n            className=\"LoginForm\"\n          >\n            <Form.Row>\n              <Form.Group as={Col} md=\"8\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"User Name\" />\n              </Form.Group>\n              <Form.Group as={Col} md=\"8\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n            </Form.Row>\n            {INCORRECT_USERNAME_OR_PASSWORD && (\n              <p className=\"errorHandler\">Incorrect Username or Password</p>\n            )}\n            {USER_NOT_FOUND && <p className=\"errorHandler\">User not found</p>}\n            <Button type=\"submit\">Login</Button>\n          </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  let { \n    username,\n    password,\n    validated,\n    LOGGEDIN,\n    USER_NOT_FOUND,\n    INCORRECT_USERNAME_OR_PASSWORD,\n    REDIRECT,\n    ROUTE\n  } = state.loginReducer;\n\n  let { TRIED_POSTING_ISSUE } = state.postReducer;\n  console.log(TRIED_POSTING_ISSUE);\n  console.log(state.loginReducer)\n  console.log(state.registerReducer)\n  console.log(state);\n  return {\n    username,\n    password,\n    validated,\n    LOGGEDIN,\n    USER_NOT_FOUND,\n    INCORRECT_USERNAME_OR_PASSWORD,\n    REDIRECT,\n    ROUTE,\n    TRIED_POSTING_ISSUE\n  };\n}\n\n// import action functions\n// can also import different actions from different files\nconst mapDispatchToProps = {\n  validateStatus,\n  finishedLoggingIn,\n  reRouteAfterCompleteLogin\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Login));\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport PostForm from \"./PostForm\";\nimport \"./assets/DraggableUploader.scss\";\n\nimport Login from \"../Users/Login\";\n\nclass Post extends Component {\n  render() {\n    let curToken = localStorage.getItem(\"token\");\n    return (\n      <div>\n        {/* {curToken == null && (\n          <p> You must login before you can post anything </p>\n        )} */}\n        {/* We pass in the route to props for Login because login has a feature\n        to detect any incoming routes to redirect back to that page\n        after logging in  */}\n        {/* {curToken == null ? <Login route=\"/post\" /> : <PostForm />} */}\n        <PostForm />\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport {\n  validate,\n  formNotFullfilled,\n  registered,\n  userAlreadyExists\n} from \"../redux/actions/registerAction\";\nimport { reRouteAfterCompleteLogin } from \"../redux/actions/loginAction\";\n\nclass Register extends Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    let firstName = event.target.children[0].children[0].children[1].value;\n    let lastName = event.target.children[0].children[1].children[1].value;\n    let email = event.target.children[0].children[2].children[1].value;\n    let username = event.target.children[0].children[3].children[1].value;\n    let password = event.target.children[0].children[4].children[1].value;\n\n    // check if names have spacing\n    if (\n      username.includes(\" \") ||\n      firstName.includes(\" \") ||\n      email.includes(\" \") ||\n      lastName.includes(\" \")\n    ) {\n      let validate = {\n        validated: false,\n        registered: false,\n        USER_ALREADY_EXISTS: false,\n        FORM_NOT_FULLFILLED: false,\n        SPACE_IN_USERNAME: true\n      };\n\n      this.props.validate(validate);\n      return 0;\n    }\n\n    // split into arrays to guarentee no spacing\n    let firstName1 = firstName.split(\" \");\n    let lastName1 = lastName.split(\" \");\n    let email1 = email.split(\" \");\n    let username1 = username.split(\" \");\n    let password1 = password.split(\" \");\n\n    // check if any fields are empty\n    // If any field is empty change state in registerReducer of formNotFullfilled to true\n    if (\n      firstName1[0] === \"\" ||\n      lastName1[0] === \"\" ||\n      email1[0] === \"\" ||\n      username1[0] === \"\" ||\n      password1[0] === \"\"\n    ) {\n      console.log(password1);\n      this.props.formNotFullfilled();\n    } else {\n      let obj = {\n        firstname: firstName,\n        lastname: lastName,\n        email: email,\n        username: username,\n        password: password\n      };\n\n      axios\n        .post(\"/userauth/register\", obj)\n        .then(res => {\n\n          let message = res.data.message;\n          console.log(res);\n          if (message === \"REGISTER_SUCCESS\") {\n            // const pathAfterLogin = \"/home\"\n            // reRouteAfterCompleteLogin(pathAfterLogin);\n            this.props.registered();\n            const path = \"/login\";\n            this.props.history.push(path);\n          } else if (message === \"USER_ALREADY_EXISTS\") {\n            console.log(\"user already exists\");\n            this.props.userAlreadyExists();\n          } else if (message === \"ERR_NO_PASSWORD\") {\n            console.log(\"handle no password error\");\n          }\n        })\n        .catch(err => {\n          console.log(err.message);\n        });\n    }\n  }\n\n  componentDidMount = () => {\n\n    // update path so if you're logged in Login knows\n    // last path is \"/register\"\n    let path = \"/register\"\n    this.props.reRouteAfterCompleteLogin(path);\n    console.log(this.props.ROUTE)\n  };\n\n  render() {\n    console.log(this.props);\n    const {\n      validated,\n      isRegistered,\n      USER_ALREADY_EXISTS,\n      FORM_NOT_FULLFILLED,\n      SPACE_IN_USERNAME\n    } = this.props;\n    return (\n      <div>\n        <Form\n          noValidate\n          validated={validated}\n          onSubmit={e => this.handleSubmit(e)}\n          className=\"RegisterForm\"\n        >\n          <Form.Row>\n            <Form.Group as={Col} md=\"4\" controlId=\"firstName\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"First name\"\n                defaultValue=\"Mark\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"lastName\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Last name\"\n                defaultValue=\"Otto\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"8\" controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Email\" />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"8\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"User Name\" />\n              {USER_ALREADY_EXISTS && (\n                <p className=\"errorHandler\">User already exists</p>\n              )}\n            </Form.Group>\n            <Form.Group as={Col} md=\"8\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n          </Form.Row>\n          {FORM_NOT_FULLFILLED && (\n            <p className=\"errorHandler\">Please fill out form</p>\n          )}\n          {SPACE_IN_USERNAME && (\n            <p className=\"errorHandler\">No spaces are allowed as characters</p>\n          )}\n          <Button type=\"submit\">Register</Button>\n        </Form>\n        {/* {registered && <Login />} */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let {\n    username,\n    password,\n    validated,\n    isRegistered,\n    USER_ALREADY_EXISTS,\n    FORM_NOT_FULLFILLED,\n    SPACE_IN_USERNAME\n  } = state.registerReducer;\n  let { ROUTE } = state.loginReducer;\n  console.log(state);\n  return {\n    username,\n    password,\n    validated,\n    isRegistered,\n    USER_ALREADY_EXISTS,\n    FORM_NOT_FULLFILLED,\n    SPACE_IN_USERNAME,\n    ROUTE\n  };\n};\n\nconst mapDispatchToProps = {\n  validate,\n  formNotFullfilled,\n  registered,\n  userAlreadyExists,\n  reRouteAfterCompleteLogin\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register);\n","export const validate = validate => {\n  return {\n    type: \"REGISTER_VALIDATE\",\n    validate\n  };\n};\n\nexport const formNotFullfilled = () => {\n  return {\n    type: \"FORM_NOT_FULLFILLED\"\n  };\n};\n\nexport const registered = () => {\n  return {\n    type: \"REGISTERED\"\n  };\n};\n\nexport const userAlreadyExists = () => {\n  return {\n    type: \"USER_ALREADY_EXISTS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport \"./Marker.css\";\n\nconst Marker = (props) => {\n  const { color, name, id } = props;\n  return (\n    <div>\n      <div\n        className=\"pin bounce\"\n        style={{ backgroundColor: color, cursor: \"pointer\" }}\n        title={name}\n      />\n      <div className=\"pulse\" />\n    </div>\n  );\n};\n\nexport default Marker;\n","import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  updateData,\n  updateClickedDetails,\n  handleIndex\n} from \"../../redux/actions/homepageAction\";\n\nclass ProductDetails extends Component {\n  static defaultProps = {\n    location: {\n      lat: 37.774929,\n      lng: -122.419416\n    },\n    zoom: 11\n  };\n\n  async componentDidMount() {\n    console.log(this.props.detailsData);\n  }\n\n  render() {\n    console.log(\"line 19\");\n    let imgObj = \"\";\n    let dest = \"\";\n    let filename = \"\";\n    let imagepath = \"\";\n    let location = {};\n    const {\n      id,\n      city,\n      imageFile,\n      issueType,\n      latitude,\n      longitude,\n      postings_created_date,\n      state,\n      street,\n      zipcode,\n      description,\n      postType\n    } = this.props.detailsData;\n    if (imageFile == undefined) {\n      this.props.history.push(\"/home\");\n    } else {\n      console.log(imageFile);\n      imgObj = JSON.parse(imageFile);\n      console.log(imgObj);\n      dest = \"src/uploads/\";\n      filename = imgObj.filename;\n      imagepath = dest + filename;\n      console.log(imagepath);\n      console.log(latitude, longitude);\n      location = {\n        lat: latitude,\n        lng: longitude\n      };\n    }\n\n    return (\n      <div>\n        <React.Fragment>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-10 mx-auto col-md-6 my-3\">\n                <img\n                  // src={require(imagepath)}\n                  className=\"img-card-top\"\n                  alt=\"recipe\"\n                  style={{ height: \"14rem\" }}\n                />\n              </div>\n              <div style={{ height: \"50vh\", width: \"100%\" }}>\n                <GoogleMapReact\n                  bootstrapURLKeys={{\n                    key: `AIzaSyBUHdcZt1CDRo9chaTXDHda-Wkj4HFh7yE`\n                    //Google API key\n                    // AIzaSyBUHdcZt1CDRo9chaTXDHda-Wkj4HFh7yE\n                  }}\n                  defaultCenter={location}\n                  defaultZoom={11}\n                >\n                  <Marker\n                    lat={latitude}\n                    lng={longitude}\n                    name=\"My Marker\"\n                    color=\"red\"\n                  />\n                </GoogleMapReact>\n              </div>\n              <div className=\"card-body text-capitalized\">\n                <h6>Street: {street}</h6>\n                <h6>City: {city}</h6>\n                <h6>Zipcode: {zipcode}</h6>\n                <h6>State: {state}</h6>\n                <h6 className=\"text-warning text-slanted\">\n                  Issue Type: {issueType}\n                </h6>\n                <h6 className=\"text-warning text-slanted\">\n                  Description: {description}\n                </h6>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n// export default Products;\nconst mapStateToProps = state => {\n  console.log(state);\n  let { data, details_id, pageIndex, detailsData } = state.homepageReducer;\n  return { data, details_id, pageIndex, detailsData };\n};\n\nconst mapDispatchToProps = {\n  updateData,\n  updateClickedDetails,\n  handleIndex\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(ProductDetails));\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/layout/Navbar\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\n// Import Pages\nimport Home from \"./components/pages/Home\";\nimport Post from \"./components/pages/Post\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Login from \"./components/Users/Login\";\nimport Register from \"./components/Users/Register\";\nimport ProductDetails from \"./components/pages/HomepageList/ProductDetails\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/post\" component={Post} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/productdetails\" component={ProductDetails} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\n  username: \"\",\n  password: \"\",\n  validated: false,\n  LOGGEDIN: false,\n  USER_NOT_FOUND: false,\n  INCORRECT_USERNAME_OR_PASSWORD: false,\n  ROUTE: \"\"\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"VALIDATE\":\n      let {\n        validated,\n        LOGGEDIN,\n        USER_NOT_FOUND,\n        INCORRECT_USERNAME_OR_PASSWORD\n      } = action.validate;\n      return {\n        ...state,\n        validated: validated,\n        LOGGEDIN: LOGGEDIN,\n        USER_NOT_FOUND: USER_NOT_FOUND,\n        INCORRECT_USERNAME_OR_PASSWORD: INCORRECT_USERNAME_OR_PASSWORD\n      };\n    case \"REDIRECT\":\n      let route = action.route;\n      console.log(route);\n      return {\n        ...state,\n        // REDIRECT: true,\n        ROUTE: route\n      };\n    case \"LOGGOUT\":\n      return {\n        ...state,\n        LOGGEDIN: false\n      };\n      console.log(\"logout action\");\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","const INITIAL_STATE = {\n  username: \"\",\n  password: \"\",\n  validated: false,\n  isRegistered: false,\n  USER_ALREADY_EXISTS: false,\n  FORM_NOT_FULLFILLED: false,\n  SPACE_IN_USERNAME: false\n};\n\nconst registerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"REGISTER_VALIDATE\":\n      let {\n        validated,\n        isRegistered,\n        USER_ALREADY_EXISTS,\n        FORM_NOT_FULLFILLED,\n        SPACE_IN_USERNAME\n      } = action.validate;\n\n      return {\n        ...state,\n        validated,\n        isRegistered,\n        USER_ALREADY_EXISTS,\n        FORM_NOT_FULLFILLED,\n        SPACE_IN_USERNAME\n      };\n    case \"FORM_NOT_FULLFILLED\":\n      return {\n        ...state,\n        FORM_NOT_FULLFILLED: true\n      };\n    case \"REGISTERED\":\n      return {\n        ...state,\n        isRegistered: true,\n        validated: true\n      };\n    case \"USER_ALREADY_EXISTS\":\n      return {\n        ...state,\n        USER_ALREADY_EXISTS: true,\n        FORM_NOT_FULLFILLED: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default registerReducer;\n","const INITIAL_STATE = {\n  login: false,\n  register: false\n};\n\nconst userauthReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"CLICKED_LOGIN\":\n      return {\n        login: true,\n        register: false\n      };\n\n    case \"CLICKED_REGISTER\":\n      return {\n        login: false,\n        register: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userauthReducer;\n","const INITIAL_STATE = {\n  postStatus: \"\",\n  location: \"\",\n  postType: \"\",\n  loadedFiles: [],\n  fd: \"\",\n  file: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  street: \"\",\n  city: \"\",\n  state: \"\",\n  zipcode: \"\",\n  issueType: \"\",\n  description: \"\",\n  imageFile: \"\",\n  locationError: false,\n  geoLocationIsLoading: false,\n  TRIED_POSTING_ISSUE: false,\n};\n\n// Post reducer\nconst postReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"UPDATE_FORM\":\n      let fieldToChange = action.fieldToChange;\n      let keyName = \"\";\n      let value = \"\";\n      console.log(keyName);\n      console.log(value);\n      console.log(fieldToChange);\n      // Seperate keys and values\n      // We can update store with any key \n      // with any value\n      for( let key in fieldToChange ) {\n        keyName = key;\n        value = fieldToChange[key];\n      }  \n      \n      return {\n        ...state,\n        [keyName]: value\n      };  \n    case \"LOAD_IMAGE\":\n      let newImage = action.newImage;\n\n      return {\n        ...state,\n        imageFile: newImage\n      };\n    case \"UPDATE_GEOLOCATION\":\n      let { latitude, longitude } = action.location;\n      \n      return {\n        ...state,\n        latitude: latitude,\n        longitude: longitude\n      };\n    case \"ADD_TO_IMAGE_LIST\":\n      let imageToAdd = action.imageToAdd;\n      \n      return {\n        ...state,\n        loadedFiles: [...state.loadedFiles, imageToAdd]\n      };\n\n    case \"ERR_GET_LOCATION\":\n      return {\n        ...state,\n        locationError: true\n      }\n\n    case \"ADD_TO_IMAGE_LIST\":\n      return {\n        ...state,\n        loadedFiles: []\n      };\n    case \"GEO_LOCATION_LOADING\":\n      return{\n        ...state,\n        geoLocationIsLoading: true,\n      };\n    case \"GEO_LOCATION_DONE_LOADING\":\n      return {\n        ...state,\n        geoLocationIsLoading: false,\n      }\n\n    // Case TRIED_POSTING_ISSUE and FINISHED_LOGGING_IN_AFTER_TRYING_TO_POST\n    // are just used to set TRIED_POSTING_ISSUE to true and false\n    // it will turn true if user tries to post without logging in,\n    // It will turn false after the user has succesfully logged in.\n    case \"TRIED_POSTING_ISSUE\":\n      return {\n        ...state,\n        TRIED_POSTING_ISSUE: true,\n      }\n    case \"FINISHED_LOGGING_IN_AFTER_TRYING_TO_POST\":\n      return{\n        ...state,\n        TRIED_POSTING_ISSUE: false,\n      }\n    case \"RESET_REDUCER\":\n      return {\n        postStatus: \"\",\n        location: \"\",\n        postType: \"\",\n        loadedFiles: [],\n        fd: \"\",\n        file: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n        issueType: \"\",\n        description: \"\",\n        imageFile: \"\",\n        locationError: \"\",\n        geoLocationIsLoading: false, \n      }\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","const INITIAL_STATE = {\n  data: [],\n  pageIndex: 1,\n  search: \"\",\n  details_id: \"\",\n  toUpdateHomepage: false,\n  detailsData: {},\n};\n\nconst homepageReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      let { data } = action;\n      return {\n        ...state,\n        data: [...data]\n      };\n    case \"CLICKED_ISSUE_DETAILS\":\n      let { id, index } = action.tempObj;\n      console.log(id, index);\n      return {\n        ...state,\n        details_id: id,\n        pageIndex: index\n      };\n    case \"UPDATE_INDEX\":\n      return {\n          ...state,\n          pageIndex:index\n      };\n    case \"UPDATE_SEARCH\":\n        let input = action.input\n        console.log(input)\n        return {\n            ...state,\n            search: input\n        }\n    case \"UPDATE_HOMEPAGE\":\n        let bool = action.bool\n        console.log(bool)\n        return {\n            ...state,\n            toUpdateHomepage: bool\n        }\n    case \"CLICKED_ITEM\":\n        return {\n            ...state,\n            detailsData: action.data\n        }\n    default:\n      return state;\n  }\n};\n\nexport default homepageReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import redux\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\n// import reducers\nimport loginReducer from \"./components/redux/reducers/loginReducer\";\nimport registerReducer from \"./components/redux/reducers/registerReducer\";\nimport userauthReducer from \"./components/redux/reducers/userauthReducer\"\nimport postReducer from \"./components/redux/reducers/postReducer\"\nimport homepageReducer from \"./components/redux/reducers/homepageReducer\"\n\n// combine reducers\nconst rootReducer = combineReducers({\n  loginReducer,\n  registerReducer,\n  userauthReducer,\n  postReducer,\n  homepageReducer\n});\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}