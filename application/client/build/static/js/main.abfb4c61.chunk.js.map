{"version":3,"sources":["assets/donkey.jpg","components/redux/actions/loginAction.js","components/Users/UserAuth.js","components/redux/actions/userauthAction.js","components/pages/HomepageList/ProductSearch.js","components/layout/Navbar.js","components/pages/showPostings.js","components/redux/actions/homepageAction.js","components/pages/HomepageList/Products.js","components/pages/HomepageList/ProductsList.js","components/pages/HomepageList/Marker.js","components/pages/HomepageList/ProductDetails.js","components/pages/Home.js","components/pages/ImageUpload.js","components/redux/actions/postAction.js","components/pages/PostForm.js","components/Users/Login.js","components/pages/Post.js","components/Users/Register.js","components/redux/actions/registerAction.js","App.js","serviceWorker.js","components/redux/reducers/loginReducer.js","components/redux/reducers/registerReducer.js","components/redux/reducers/userauthReducer.js","components/redux/reducers/postReducer.js","components/redux/reducers/homepageReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","reRouteAfterCompleteLogin","route","type","UserAuth","loginButton","_this","props","clickLogin","history","push","console","log","registerButton","clickRegister","logoutButton","_callee","regenerator_default","a","wrap","_context","prev","next","localStorage","removeItem","t0","stop","curToken","getItem","react_default","createElement","className","Button_default","id","onClick","this","Component","mapDispatchToProps","logout","connect","state","_state$userauthReduce","userauthReducer","login","register","LOGGEDIN","loginReducer","withRouter","ProductSearch","_this$props","value","handleSubmit","handleChange","Fragment","onSubmit","name","placeholder","onChange","Navbar","handleSearch","event","preventDefault","target","search","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","style","color","react_router_dom","to","Users_UserAuth","showPostingss","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","data","_this2","axios","get","then","res","setState","catch","err","map","i","location","postType","key","src","concat","updateData","updateClickedDetails","index","tempObj","handleIndex","Products","handleDetails","_this$props$issue","issue","street","city","zipcode","description","imageFile","issueType","imgObj","JSON","parse","alt","height","_state$homepageReduce","homepageReducer","details_id","pageIndex","ProductsList","recipes","error","ProductSearch_ProductSearch","HomepageList_Products","recipe_id","Marker","backgroundColor","cursor","title","ProductDetails","picture","width","lib_default","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","pages_HomepageList_Marker","defaultProps","zoom","Home","displayPage","HomepageList_ProductDetails","HomepageList_ProductsList","e","_this$state","searchFilter","filter","x","toLowerCase","includes","_this3","Container","Row","ImageUpload","currentTarget","files","fileReader","FileReader","onFileLoad","onload","result","file","isUploading","addLoadedFile","onabort","alert","onerror","readAsDataURL","removeAllLoadedFile","loadedFiles","display","flexDirection","ref","input","fileInput","onDragOver","stopPropagation","onDrop","bind","idx","progressBar","removeLoadedFile","react_icons_kit","icon","remove","size","buttons","text","intent","Intent","PRIMARY","minimal","click","imageToAdd","newImage","postState","_postState$postReduce","postReducer","fd","PostForm","getLocation","options","enableHighAccuracy","timeout","maximumAge","isLoading","navigator","geolocation","getCurrentPosition","success","pos","crd","coords","setGeoLocation","doneLoading","errGetLocation","warn","code","message","undefined","needsToLogin","latitude","longitude","username","user_id","formData","FormData","append","method","url","config","headers","Content-Type","handleChangeInput","defineProperty","updateForm","_this$props2","locationError","geoLocationIsLoading","noValidate","htmlFor","pages_ImageUpload","fieldToChange","resetReducer","postStatus","Login","children","password","obj","post","ROUTE","validateStatus","USER_NOT_FOUND","validated","INCORRECT_USERNAME_OR_PASSWORD","finishedLoggingIn","setItem","token","path","length","goBack","nextProps","TRIED_POSTING_ISSUE","Form","Group","as","Col","md","controlId","Label","Control","es_Button","validate","_state$loginReducer","REDIRECT","registerReducer","Post","pages_PostForm","Register","componentDidMount","firstName","lastName","email","registered","USER_ALREADY_EXISTS","FORM_NOT_FULLFILLED","SPACE_IN_USERNAME","firstName1","split","lastName1","email1","username1","password1","formNotFullfilled","firstname","lastname","userAlreadyExists","isRegistered","Form_default","required","defaultValue","Feedback","_state$registerReduce","App","layout_Navbar","react_router","exact","component","showPostings","Boolean","window","hostname","match","INITIAL_STATE","arguments","action","_action$validate","objectSpread","keyName","_action$location","toConsumableArray","_action$tempObj","rootReducer","combineReducers","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abfb4c61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donkey.920876bf.jpg\";","export const validateStatus = validate => {\n  return {\n    type: \"VALIDATE\",\n    validate\n  };\n};\n\n// Re routes based on given route after logging in\nexport const reRouteAfterCompleteLogin = route => {\n  return {\n    type: \"REDIRECT\",\n    route\n  }\n}\n\n// Re routes based on given route after logging in\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, withRouter, Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport { clickLogin, clickRegister } from \"../redux/actions/userauthAction\";\nimport { logout } from \"../redux/actions/loginAction\";\nimport ReactDOM from \"react-dom\";\n\nclass UserAuth extends Component {\n  loginButton = () => {\n    this.props.clickLogin();\n    this.props.history.push(\"/login\");\n    console.log(\"clicked login\");\n  };\n\n  registerButton = () => {\n    this.props.clickRegister();\n    this.props.history.push(\"/register\");\n    console.log(\"clicked register\");\n  };\n\n  logoutButton = async () => {\n    try {\n      // Async await so we to make sure token gets removed before\n      // performing any other tasks\n      await localStorage.removeItem('token');\n      this.props.history.push(\"/\");\n    } catch (error) {\n      // Error saving data\n      console.log(error);\n    }\n  };\n  \n  render() {\n    let curToken = localStorage.getItem(\"token\");\n    console.log();\n    return (\n      <div className=\"userAuth\">\n        {curToken && (\n          <Button id=\"loginButton\" onClick={this.logoutButton}>\n            Logout\n          </Button>\n        )}\n        {!curToken && (\n          <Button id=\"loginButton\" onClick={this.loginButton}>\n            Login\n          </Button>\n        )}\n        {!curToken && (\n          <Button id=\"registerButton\" onClick={this.registerButton}>\n            Register\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let { login, register } = state.userauthReducer;\n  let { LOGGEDIN } = state.loginReducer;\n  return {\n    login,\n    register,\n    LOGGEDIN\n  };\n};\n\nconst mapDispatchToProps = {\n  clickLogin,\n  clickRegister,\n  logout\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(UserAuth));\n","export const clickLogin = () => {\n  return {\n    type: \"CLICKED_LOGIN\"\n  };\n};\n\nexport const clickRegister = () => {\n  return {\n    type: \"CLICKED_REGISTER\"\n  };\n};\n","import React, {Component} from \"react\";\n\nexport default class ProductSearch extends Component {\n\n    render() {\n        const {\n        value, \n        handleSubmit, \n        handleChange} = this.props\n\n        return(\n        \n        <React.Fragment>\n\n            <form className=\"mr-sm-2\" onSubmit={handleSubmit}>\n\n                <input \n                type=\"text\" \n                name=\"search\"\n                placeholder=\"search by city or zipcode...\"\n                className=\"form-control\"\n                value={value}\n                onChange={handleChange}\n                />\n\n                <div className=\"input-group-append\">\n                <button type=\"submit\" \n                className=\"input-group-text bg-primary text-white\">\n                <i className=\"fas fa-search\" />\n                </button>\n                </div>\n\n            </form>\n\n \n                    </React.Fragment>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport logo from \"../../assets/donkey.jpg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport UserAuth from \"../Users/UserAuth\";\n\nimport ProductSearch from \"../pages/HomepageList/ProductSearch\";\n\n// import DropdownMenu from \"../pages/DropdownMenu\";\nclass Navbar extends Component {\n  handleSearch = event => {\n    event.preventDefault();\n    console.log(event.target.search.value);\n  };\n  handleChange = event => {\n    console.log(event.target.search.value);\n  }\n  render() {\n    const { value, handleSubmit, handleChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n          <a className=\"navbar-brand ml-5\" href=\"#\">\n            <h1>Team 06</h1>\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span>\n              <i className=\"fas fa-bars\" style={{ color: \"#fff\" }} />\n            </span>\n          </button>\n\n          <ul className=\"navbar-nav m-auto\">\n            <li className=\"nav-item active\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/home\"\n              >\n                Home\n                <i className=\"fas fa-home\" />\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link text-white text-uppercase ml-5\"\n                to=\"/post\"\n              >\n                Post\n              </Link>\n            </li>\n          </ul>\n          <form className=\"search\" onSubmit={this.handleSearch}>\n            <input\n              type=\"text\"\n              className=\"searchInput\"\n              name=\"search\"\n              placeholder=\"Search by\"\n              value={value}\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\" className=\"searchButton\">\n              Search\n              <i className=\"fas fa-search\" />\n            </button>\n          </form>\n          <UserAuth />\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass showPostingss extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/postings\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          data: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    console.log(this.state.data);\n    return (\n      <div>\n        {this.state.data.map(i => {\n          // let { id, location, postType, postStatus, picture } = i;\n          let { id, location, postType } = i;\n\n          return (\n            <tr key={i} className=\"row\">\n              <td>\n                <div>\n                  <p>{id}</p>\n                  <img src={`${id}`} />\n                  <p>{location}</p>\n                  <p>{postType}</p>\n                  {/* <p>{postStatus}</p>\n                  <p>{picture}</p> */}\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default showPostingss;\n","export const updateData = data => {\n    console.log(data)\n    return {\n        type: \"UPDATE_DATA\",\n        data\n    }\n}\n\nexport const updateClickedDetails = (id, index) => {\n    let tempObj = {id, index};\n    return {\n        type: \"CLICKED_ISSUE_DETAILS\",\n        tempObj\n    }\n}\n\nexport const handleIndex = index => {\n    return {\n        type: \"UPDATE_INDEX\",\n        index\n    }\n}","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  updateData,\n  updateClickedDetails,\n  handleIndex\n} from \"../../redux/actions/homepageAction\";\n\nclass Products extends Component {\n  render() {\n    // const { image_url, title, recipe_id, publisher } = this.props.recipe;\n    // const { id, location, postStatus, postType, picture } = this.props.recipe;\n    const { handleDetails } = this.props;\n    console.log(this.props);\n    const {\n      id,\n      street,\n      city,\n      zipcode,\n      state,\n      description,\n      imageFile,\n      issueType\n    } = this.props.issue;\n    let imgObj = JSON.parse(imageFile);\n    console.log(imgObj);\n    // application/client/src/components/pages/HomepageList/Products.js\n    return (\n      <React.Fragment>\n        <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\n          <div onClick={() => this.props.handleDetails(0, id)}>\n            <div className=\"card\" >\n              <img\n                src=\"/uploads/donkey.jpg\"\n                className=\"img-card-top\"\n                alt=\"Issue Image\"\n                style={{ height: \"14rem\" }}\n              />\n              <div className=\"card-body text-capitalized\">\n                <h6>Street: {street}</h6>\n                <h6>City: {city}</h6>\n                <h6>Zipcode: {zipcode}</h6>\n                <h6>State: {state}</h6>\n                <h6 className=\"text-warning text-slanted\">\n                  Issue Type: {issueType}\n                </h6>\n                <h6 className=\"text-warning text-slanted\">\n                  Description: {description}\n                </h6>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n// export default Products;\nconst mapStateToProps = state => {\n  console.log(state);\n  let { data, details_id, pageIndex } = state.homepageReducer;\n;\n  return { data, details_id, pageIndex };\n};\n\nconst mapDispatchToProps = {\n  updateData,\n  updateClickedDetails,\n  handleIndex\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Products));","import React, { Component } from \"react\";\nimport Products from \"./Products\";\nimport ProductSearch from \"../HomepageList/ProductSearch\";\nimport axios from \"axios\";\nimport { updateData, updateClickedDetails } from \"../../redux/actions/homepageAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// export default class ProductsList extends Component {\n\n// constructor(props) {\n//   super(props);\n//   this.state = {\n//   data: []\n//   };\n// }\n\n//   async getProduct() {\n//     try {\n//       const response = await axios.get(\"/api/postings\")\n//       .then(res => {console.log(res.data);\n//       this.setState({\n//         data:res.data\n//       });\n//     })\n//     } catch(error) {\n//       console.log(error);\n\n//     }\n//   }\n\n// componentDidMount() {\n//   axios\n//   .get(\"/api/postings\")\n//   .then(res => {\n//     console.log(res.data);\n//     this.setState({\n//       data: res.data\n//     });\n//   })\n//   .catch(err => {\n//     console.log(err);\n//   });\n// }\nclass ProductsList extends Component {\n  render() {\n    const {\n      recipes,\n      handleDetails,\n      value,\n      handleSubmit,\n      handleChange,\n      error,\n      data\n    } = this.props;\n\n    console.log(this.props);\n    // console.log(data)\n    // let data = [];\n    console.log(data)\n    return (\n      <div>\n        <React.Fragment>\n          <ProductSearch\n            value={value}\n            handleChange={handleChange}\n            handleSubmit={handleSubmit}\n          />\n\n          <div className=\"rwo\" />\n          <div className=\"container my-6\">\n            <div className=\"row\">\n              {data.map(i => {\n                //   let {id, location, postType } = i;\n                return (\n                  <Products\n                    key={i.recipe_id}\n                    issue={i}\n                    handleDetails={handleDetails}\n                  />\n                );\n              })}\n              {/* {error ? (\n                <h1 className=\"text-danger text-center\">{error}</h1>\n              ) : (\n \n              )} */}\n            </div>\n          </div>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let { data, details_id, pageIndex } = state.homepageReducer;\n  return { data, details_id, pageIndex };\n};\n\nconst mapDispatchToProps = {\n  updateData,\n  updateClickedDetails\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(ProductsList));\n","import React, { Component } from \"react\";\nimport \"./Marker.css\";\n\nconst Marker = (props) => {\n  const { color, name, id } = props;\n  return (\n    <div>\n      <div\n        className=\"pin bounce\"\n        style={{ backgroundColor: color, cursor: \"pointer\" }}\n        title={name}\n      />\n      <div className=\"pulse\" />\n    </div>\n  );\n};\n\nexport default Marker;\n","import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  updateData,\n  updateClickedDetails,\n  handleIndex\n} from \"../../redux/actions/homepageAction\";\n\nclass ProductDetails extends Component {\n  static defaultProps = {\n    location: {\n      lat: 37.774929,\n      lng: -122.419416\n    },\n    zoom: 11\n  };\n\n  async componentDidMount() {\n    console.log(this.props.id);\n  }\n\n  render() {\n    console.log(\"line 19\")\n    const { id, picture, postType } = this.props;\n    // const { handleIndex } = this.props;\n    let location = {\n      lat: 37.774929,\n      lng: -122.419416\n    }\n    return (\n      <div>\n        <React.Fragment>\n          <button\n            className=\"btn btn-warning text-capitalize mb-5\"\n            onClick={() => this.props.handleIndex(1)}\n          >\n            back to home page\n          </button>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-10 mx-auto col-md-6 my-3\">\n                <img\n                  // src={picture}\n                  className=\"img-card-top\"\n                  alt=\"recipe\"\n                  style={{ height: \"14rem\" }}\n                />\n              </div>\n              <div style={{ height: \"50vh\", width: \"100%\" }}>\n                <GoogleMapReact\n                  bootstrapURLKeys={{\n                    key: `AIzaSyBUHdcZt1CDRo9chaTXDHda-Wkj4HFh7yE`\n                    //Google API key\n                    // AIzaSyBUHdcZt1CDRo9chaTXDHda-Wkj4HFh7yE\n                  }}\n                  defaultCenter={location}\n                  defaultZoom={11}\n                >\n                  <Marker\n                    lat={37.774929}\n                    lng={-122.419416}\n                    name=\"My Marker\"\n                    color=\"red\"\n                  />\n                </GoogleMapReact>\n              </div>\n              <div className=\"card-body text-capitalized\">\n                <h6>id: {id}</h6>\n                <h6>other details goes here</h6>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n// export default Products;\nconst mapStateToProps = state => {\n  console.log(state);\n  let { data, details_id, pageIndex } = state.homepageReducer;\n;\n  return { data, details_id, pageIndex };\n};\n\nconst mapDispatchToProps = {\n  updateData,\n  updateClickedDetails,\n  handleIndex\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(ProductDetails));","import React, { Component } from \"react\";\nimport { Dropdown, Navbar } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Container, Row } from \"reactstrap\";\n\nimport ProductsList from \"./HomepageList/ProductsList\";\nimport ProductDetails from \"./HomepageList/ProductDetails\";\n\nimport {\n  updateData,\n  updateClickedDetails,\n  handleIndex\n} from \"../redux/actions/homepageAction\";\n\nclass Home extends Component {\n  state = {\n    data: [],\n\n    details_id: 35382,\n    pageIndex: 1,\n    search: \"\"\n  };\n\n  async getProduct() {\n    try {\n      //const filler = await fetch(this.state.data);\n      const res = await axios.get(\"/api/postings\").then(res => {\n        console.log(res.data);\n        let { data } = res;\n        console.log(data);\n        this.props.updateData(data);\n        // this.setState({\n        //   data: res.data\n        // });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount() {\n    // when homepage mounts, get all data from backend\n    // and store it in store\n    axios.get(\"/api/postings\").then(res => {\n      console.log(res.data);\n      let { data } = res;\n      console.log(data);\n      this.props.updateData(data);\n    });\n  }\n\n  // index always have value of 0 or 1\n  // depending on the value changed, is what page renders\n  displayPage = index => {\n    console.log(index);\n    switch (index) {\n      case 0:\n        return (\n          <ProductDetails\n          id={this.props.details_id}\n          // handleIndex={this.handleIndex}\n          />\n        );\n      case 1:\n        console.log(\"case1\")\n        return (\n          <ProductsList\n            issue={this.props.data}\n            handleDetails={this.handleDetails}\n            value={this.state.search}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            error={this.state.error}\n          />\n        );\n      default:\n    }\n  };\n\n  handleIndex = index => {\n    this.props.handleIndex(index)\n    // this.setState({\n    //   pageIndex: index\n    // });\n  };\n\n  handleDetails = (index, id) => {\n    // this.setState({\n    //   details_id: id,\n    //   pageIndex: index\n    // });\n    this.props.updateClickedDetails(id, index);\n  };\n\n  handleChange = e => {\n    // console.log(\"handle change\");\n    this.setState(\n      {\n        search: e.target.value\n      },\n      () => {\n        console.log(this.state.search);\n      }\n    );\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { data, search } = this.state;\n    var searchFilter = data.filter(function(x) {\n      return x.postType.toLowerCase().includes(search.toLowerCase());\n    });\n    console.log(searchFilter);\n    this.setState(() => {\n      return { data: searchFilter, search };\n    });\n  };\n\n  render() {\n    \n    console.log(this.props)\n    return (\n      <div>\n        <Container className=\"mt-2\">\n          <Row>\n            <div className=\"container my-6\">\n              {/* <Dropdown>\n                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                  Filter\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item href=\"#/Park\">Park</Dropdown.Item>\n                  <Dropdown.Item href=\"#/Zipcode\">Zip code</Dropdown.Item>\n                  <Dropdown.Item href=\"#/city\">city</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown> */}\n            </div>\n            <React.Fragment>\n              {this.displayPage(this.props.pageIndex)}\n            </React.Fragment>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  let { data, details_id, pageIndex } = state.homepageReducer;\n;\n  return { data, details_id, pageIndex };\n};\n\nconst mapDispatchToProps = {\n  updateData,\n  updateClickedDetails,\n  handleIndex\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Home));\n","import React, { Component } from \"react\";\n\nimport { AnchorButton, Intent, ProgressBar } from \"@blueprintjs/core\";\nimport { Icon } from \"react-icons-kit\";\n\nimport { remove } from \"react-icons-kit/fa/remove\";\nimport \"./assets/DraggableUploader.scss\";\nimport {\n  addLoadedFile,\n  removeAllLoadedFile,\n  onFileLoad,\n} from \"../redux/actions/postAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass ImageUpload extends Component {\n\n  // Utilizing formData to get image from user\n  onFileLoad(e) {\n    const imageFile = e.currentTarget.files[0];\n    console.log(imageFile);\n    let fileReader = new FileReader();\n\n    this.props.onFileLoad(imageFile);\n    fileReader.onload = () => {\n      console.log(fileReader.result)\n      const file = {\n        data: fileReader.result,\n        isUploading: false\n      };\n      //Add file\n      this.addLoadedFile(file);\n    };\n\n    fileReader.onabort = () => {\n      alert(\"Reading Aborted\");\n    };\n\n    fileReader.onerror = () => {\n      alert(\"Reading ERROR!\");\n    };\n\n    fileReader.readAsDataURL(imageFile);\n  }\n\n  addLoadedFile(file) {\n    this.props.addLoadedFile(file);\n  }\n\n  removeLoadedFile(file) {\n    this.props.removeAllLoadedFile();\n  }\n\n  render() {\n    let { loadedFiles } = this.props;\n    console.log(loadedFiles);\n    return (\n      <div\n        className=\"inner-container\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div className=\"sub-header\">Drag an Image</div>\n        <div className=\"draggable-container\">\n          <input\n            type=\"file\"\n            id=\"file-browser-input\"\n            name=\"file-browser-input\"\n            ref={input => (this.fileInput = input)}\n            onDragOver={e => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            onDrop={this.onFileLoad.bind(this)}\n            onChange={this.onFileLoad.bind(this)}\n          />\n          <div className=\"files-preview-container ip-scrollbar\">\n            {loadedFiles.map((file, idx) => {\n              return (\n                <div className=\"file\" key={idx}>\n                  <img src={file.data} />\n                  <div className=\"container\">\n                    <span className=\"progress-bar\">\n                      {file.isUploading && <ProgressBar />}\n                    </span>\n                    <span\n                      className=\"remove-btn\"\n                      onClick={() => this.removeLoadedFile(file)}\n                    >\n                      <Icon icon={remove} size={19} />\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"helper-text\">Drag and Drop Images Here</div>\n          <div className=\"file-browser-container\">\n            <AnchorButton\n              text=\"Browse\"\n              intent={Intent.PRIMARY}\n              minimal={true}\n              onClick={() => this.fileInput.click()}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = postState => {\n  // let { postStatus, location, postType } = state.postReducer;\n  let {\n    fd,\n    file,\n    imageFile,\n    loadedFiles\n  } = postState.postReducer;\n  return {\n    fd,\n    file,\n    imageFile,\n    loadedFiles\n  };\n};\n\nconst mapDispatchToProps = {\n  addLoadedFile,\n  removeAllLoadedFile,\n  onFileLoad,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(ImageUpload));\n","export const updateForm = fieldToChange => {\n  return {\n    type: \"UPDATE_FORM\",\n    fieldToChange\n  };\n};\n\nexport const setGeoLocation = location => {\n  return {\n    type: \"UPDATE_GEOLOCATION\",\n    location\n  }\n}\n\nexport const errGetLocation = () => {\n  return {\n    type: \"ERR_GET_LOCATION\",\n  }\n}\n\nexport const onFileLoad = newImage => {\n  return {\n    type: \"LOAD_IMAGE\",\n    newImage\n  };\n};\n\nexport const addLoadedFile = imageToAdd => {\n  return {\n    type: \"ADD_TO_IMAGE_LIST\",\n    imageToAdd\n  }\n}\n\nexport const removeAllLoadedFile = () => {\n  return {\n    type: \"REMOVE_ALL\",\n  }\n\n}\n\nexport const resetReducer = () => {\n  return {\n    type: \"RESET_REDUCER\"\n  }\n}\n\nexport const isLoading = () => {\n  return {\n    type: \"GEO_LOCATION_LOADING\"\n  }\n}\nexport const doneLoading = () => {\n  return {\n    type: \"GEO_LOCATION_DONE_LOADING\"\n  }\n}\n\nexport const needsToLogin = () => {\n  return {\n    type: \"TRIED_POSTING_ISSUE\"\n  }\n}\n\nexport const finishedLoggingIn = () => {\n  return {\n    type: \"FINISHED_LOGGING_IN_AFTER_TRYING_TO_POST\"\n  }\n} \n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport ImageUpload from \"./ImageUpload\";\nimport {\n  updateForm,\n  setGeoLocation,\n  errGetLocation,\n  resetReducer,\n  isLoading,\n  doneLoading,\n  needsToLogin,  \n} from \"../redux/actions/postAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass PostForm extends Component {\n  // austin tsang\n  // get users geo location\n  getLocation = async () => {\n    let options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n\n    this.props.isLoading();\n\n    // dont perform anything until get coordinates\n    await navigator.geolocation.getCurrentPosition(\n      this.success,\n      this.error,\n      options\n    );\n  };\n\n  // success function getCurrentPosition\n  success = pos => {\n    // set coordinates to props, actions\n    // will handle the coordinates like latitude and longitude.\n    let crd = pos.coords;\n    this.props.setGeoLocation(crd);\n    this.props.doneLoading();\n  };\n\n  // Error function for getCurrentPosition parameter\n  error = err => {\n    // set error if no geolaction here\n    this.props.errGetLocation();\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  };\n\n  // When user submits issue\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const curToken = localStorage.getItem(\"token\");\n\n    // If user is not logged in, send them to login page\n    // and give message that they need to login before they \n    // can finish posting\n    if(curToken == undefined || curToken == \"\") {\n      // run action to set needsToLogin to true\n      this.props.needsToLogin();\n      this.props.history.push(\"/login\");\n    } else {\n      console.log(this.props);\n      let {\n        latitude,\n        longitude,\n        imageFile,\n        zipcode,\n        street,\n        city,\n        issueType,\n        state,\n        description\n      } = this.props;\n      \n      console.log(latitude, longitude);\n      console.log(imageFile);\n      let username = localStorage.getItem('username');\n      let user_id = localStorage.getItem('user_id')\n      let formData = new FormData();\n      \n      formData.append(\"imageFile\", imageFile);\n      formData.append(\"latitude\", latitude);\n      formData.append(\"longitude\", longitude);\n      formData.append(\"street\", street);\n      formData.append(\"city\", city);\n      formData.append(\"state\", state);\n      formData.append(\"zipcode\", zipcode);\n      formData.append(\"issueType\", issueType);\n      formData.append(\"username\", username);\n      formData.append(\"description\", description);\n      formData.append(\"user_id\", user_id);\n      \n      // specify we are sending form data\n      axios({\n        method: \"post\",\n        url: \"/api/postings\",\n        data: formData,\n        config: { headers: { \"Content-Type\": \"multipart/form-data\" } }\n      })\n        .then(res => {\n          // formData.forEach(key => {\n          //   formData.delete(key);\n          // });\n          // this.props.resetReducer();\n          console.log(res);\n          if(res.data == \"SUCCESS\") {\n            this.props.history.push(\"/home\");\n          }\n          \n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  // One function handles all input changnes\n  handleChangeInput = e => {\n    console.log(e.target.value);\n    let input = { [e.target.name]: e.target.value };\n    console.log(input);\n    this.props.updateForm(input);\n  };\n\n  render() {\n    let {\n      issueType,\n      longitude,\n      latitude,\n      street,\n      city,\n      state,\n      zipcode,\n      locationError,\n      geoLocationIsLoading\n    } = this.props;\n    return (\n      <div>\n        <div\n          className=\"ui form segment text-center\"\n          onSubmit={this.handleSubmit}\n          noValidate\n        >\n          <h3 className=\"text-center text-info\">Post Any Issue</h3>\n          <br />\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Select Type of Issue...</label>\n              <br />\n              <select\n                name={\"issueType\"}\n                value={issueType}\n                onChange={this.handleChangeInput}\n              >\n                <option name={\"\"} value=\"\" />\n                <option name={\"Air\"} value=\"Air\">\n                  Air\n                </option>\n                <option value=\"Water\">Water</option>\n                <option value=\"Garbage\">Garbage</option>\n                <option value=\"Hazardous Waste\">Hazardous Waste</option>\n                <option value=\"Natural Hazard\">Natural Hazard</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Street</label>\n              <br />\n              <input\n                placeholder=\"Enter Street Name...\"\n                name=\"street\"\n                value={street}\n                type=\"text\"\n                onChange={this.handleChangeInput}\n                noValidate\n              />\n            </div>\n          </div>\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">City</label>\n              <br />\n              <input\n                placeholder=\"Enter City...\"\n                name=\"city\"\n                type=\"text\"\n                value={city}\n                onChange={this.handleChangeInput}\n                noValidate\n              />\n            </div>\n          </div>\n\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">State</label>\n              <br />\n              <input\n                placeholder=\"Enter State...\"\n                name=\"state\"\n                type=\"text\"\n                value={state}\n                onChange={this.handleChangeInput}\n                noValidate\n              />\n            </div>\n          </div>\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">ZipCode</label>\n              <br />\n              <input\n                placeholder=\"Enter Zipcode...\"\n                name=\"zipcode\"\n                type=\"text\"\n                value={zipcode}\n                onChange={this.handleChangeInput}\n                noValidate\n              />\n            </div>\n          </div>\n          <br />\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label htmlFor=\"name\">Location</label>\n              <br />\n              <button onClick={this.getLocation}> Add location</button>\n              <br />\n              {locationError != \"\" &&\n                \"there was an error getting your location\"}\n              <br />\n              {geoLocationIsLoading && \"Getting location...\"}\n              <br />\n              Longitude: {longitude != \"\" && longitude}\n              <br />\n              Latitude: {latitude != \"\" && latitude}\n            </div>\n          </div>\n          <br />\n          <ImageUpload />\n          <br />\n          Description\n          <br />\n          <textarea name=\"description\" onChange={this.handleChangeInput} />\n          <br />\n          <button className=\"submit button\" onClick={this.handleSubmit}>\n            Submit Issue\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = postState => {\n  let {\n    postStatus,\n    location,\n    postType,\n    latitude,\n    longitude,\n    street,\n    city,\n    state,\n    zipcode,\n    issueType,\n    description,\n    imageFile,\n    locationError,\n    geoLocationIsLoading\n  } = postState.postReducer;\n  return {\n    postStatus,\n    location,\n    postType,\n    latitude,\n    longitude,\n    street,\n    city,\n    state,\n    zipcode,\n    issueType,\n    description,\n    imageFile,\n    locationError,\n    geoLocationIsLoading\n  };\n};\n\nconst mapDispatchToProps = {\n  updateForm,\n  setGeoLocation,\n  errGetLocation,\n  resetReducer,\n  isLoading,\n  doneLoading,\n  needsToLogin\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(PostForm));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { validateStatus, reRouteAfterCompleteLogin } from \"../redux/actions/loginAction\";\nimport { finishedLoggingIn } from \"../redux/actions/postAction\";\nimport axios from \"axios\";\n\nclass Login extends Component {\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(event.target.children[0]);\n    let username = event.target.children[0].children[0].children[1].value;\n    let password = event.target.children[0].children[1].children[1].value;\n    let obj = {\n      username: username,\n      password: password\n    };\n    console.log(obj);\n    axios\n      .post(\"/userauth/login\", obj)\n      .then(res => {\n        console.log(res);\n        console.log(this.props.ROUTE)\n        // Handle code based on message response from backend\n        let message = res.data.message;\n\n        // Handle if login was successful\n        if (message === \"LOGIN_SUCCESS\") {\n\n          let validate = {\n            USER_NOT_FOUND: false,\n            validated: true,\n            LOGGEDIN: true,\n            INCORRECT_USERNAME_OR_PASSWORD: false\n          }\n          this.props.validateStatus(validate);\n          this.props.finishedLoggingIn();\n          localStorage.setItem('token', res.data.token);\n          localStorage.setItem('user_id', res.data.result[0].id)\n          localStorage.setItem('username', username)\n          \n          let path = \"\";\t\n          // to figure out what was the last route\n          let historyLength = this.props.history.length - 1;\n          \n           // put somet path here where you want to redirect after loging in \t\n          if(this.props.ROUTE == \"/register\") {\t\n            // path =  this.props.ROUTE;\t\n            // console.log(path);\t\n            // console.log(this.props.history);\t\n            // this.props.history.push(path);\t\n            this.props.reRouteAfterCompleteLogin(\"/\");\n            path = \"/\";\t\n            console.log(path);\t\n            this.props.history.push(path);\t\n          } else {\n            this.props.history.goBack();\n          } \n        }\n        // If cannot find user \n        else if (message === \"USER_NOT_FOUND\") {\n\n          let notFound = {\n            USER_NOT_FOUND: true,\n            validated: false,\n            LOGGEDIN: false,\n            INCORRECT_USERNAME_OR_PASSWORD: false\n          }\n\n          this.props.validateStatus(notFound);\n        }\n        // If username or password was incorrect.\n        else if (message === \"INCORRECT_USERNAME_OR_PASSWORD\") {\n\n          let incorrectData = {\n            USER_NOT_FOUND: false,\n            validated: false,\n            LOGGEDIN: false,\n            INCORRECT_USERNAME_OR_PASSWORD: true\n          }\n\n          this.props.validateStatus(incorrectData);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(this.props.location)\n    console.log(nextProps.location);\n    if (nextProps.location !== this.props.location) {\n      console.log(\"line 94\")\n    }\n  }\n\n  componentDidMount() {\t\n    console.log(\"hi\");\t\n    console.log(this.props.ROUTE)\n\n    // get route passed from post page route\t\n    // We do this so we can redirect back to post page\t\n    let route = this.props.ROUTE\t\n    // this.props.reRouteAfterCompleteLogin(this.props.route);\t\n  }\n\n  render() {\n    const {\n      validated,\n      LOGGEDIN,\n      INCORRECT_USERNAME_OR_PASSWORD,\n      USER_NOT_FOUND,\n      TRIED_POSTING_ISSUE\n    } = this.props;\n    return (\n      <div>\n          {TRIED_POSTING_ISSUE == true && \"Please Login Before Posting Item\"}\n          <Form\n            noValidate\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n            className=\"LoginForm\"\n          >\n            <Form.Row>\n              <Form.Group as={Col} md=\"8\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"User Name\" />\n              </Form.Group>\n              <Form.Group as={Col} md=\"8\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n            </Form.Row>\n            {INCORRECT_USERNAME_OR_PASSWORD && (\n              <p className=\"errorHandler\">Incorrect Username or Password</p>\n            )}\n            {USER_NOT_FOUND && <p className=\"errorHandler\">User not found</p>}\n            <Button type=\"submit\">Login</Button>\n          </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  let { \n    username,\n    password,\n    validated,\n    LOGGEDIN,\n    USER_NOT_FOUND,\n    INCORRECT_USERNAME_OR_PASSWORD,\n    REDIRECT,\n    ROUTE\n  } = state.loginReducer;\n\n  let { TRIED_POSTING_ISSUE } = state.postReducer;\n  console.log(TRIED_POSTING_ISSUE);\n  console.log(state.loginReducer)\n  console.log(state.registerReducer)\n  console.log(state);\n  return {\n    username,\n    password,\n    validated,\n    LOGGEDIN,\n    USER_NOT_FOUND,\n    INCORRECT_USERNAME_OR_PASSWORD,\n    REDIRECT,\n    ROUTE,\n    TRIED_POSTING_ISSUE\n  };\n}\n\n// import action functions\n// can also import different actions from different files\nconst mapDispatchToProps = {\n  validateStatus,\n  finishedLoggingIn,\n  reRouteAfterCompleteLogin\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Login));\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport PostForm from \"./PostForm\";\nimport \"./assets/DraggableUploader.scss\";\n\nimport Login from \"../Users/Login\";\n\nclass Post extends Component {\n  render() {\n    let curToken = localStorage.getItem(\"token\");\n    return (\n      <div>\n        {/* {curToken == null && (\n          <p> You must login before you can post anything </p>\n        )} */}\n        {/* We pass in the route to props for Login because login has a feature\n        to detect any incoming routes to redirect back to that page\n        after logging in  */}\n        {/* {curToken == null ? <Login route=\"/post\" /> : <PostForm />} */}\n        <PostForm />\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport {\n  validate,\n  formNotFullfilled,\n  registered,\n  userAlreadyExists\n} from \"../redux/actions/registerAction\";\nimport { reRouteAfterCompleteLogin } from \"../redux/actions/loginAction\";\n\nclass Register extends Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    let firstName = event.target.children[0].children[0].children[1].value;\n    let lastName = event.target.children[0].children[1].children[1].value;\n    let email = event.target.children[0].children[2].children[1].value;\n    let username = event.target.children[0].children[3].children[1].value;\n    let password = event.target.children[0].children[4].children[1].value;\n\n    // check if names have spacing\n    if (\n      username.includes(\" \") ||\n      firstName.includes(\" \") ||\n      email.includes(\" \") ||\n      lastName.includes(\" \")\n    ) {\n      let validate = {\n        validated: false,\n        registered: false,\n        USER_ALREADY_EXISTS: false,\n        FORM_NOT_FULLFILLED: false,\n        SPACE_IN_USERNAME: true\n      };\n\n      this.props.validate(validate);\n      return 0;\n    }\n\n    // split into arrays to guarentee no spacing\n    let firstName1 = firstName.split(\" \");\n    let lastName1 = lastName.split(\" \");\n    let email1 = email.split(\" \");\n    let username1 = username.split(\" \");\n    let password1 = password.split(\" \");\n\n    // check if any fields are empty\n    // If any field is empty change state in registerReducer of formNotFullfilled to true\n    if (\n      firstName1[0] === \"\" ||\n      lastName1[0] === \"\" ||\n      email1[0] === \"\" ||\n      username1[0] === \"\" ||\n      password1[0] === \"\"\n    ) {\n      console.log(password1);\n      this.props.formNotFullfilled();\n    } else {\n      let obj = {\n        firstname: firstName,\n        lastname: lastName,\n        email: email,\n        username: username,\n        password: password\n      };\n\n      axios\n        .post(\"/userauth/register\", obj)\n        .then(res => {\n\n          let message = res.data.message;\n          console.log(res);\n          if (message === \"REGISTER_SUCCESS\") {\n            // const pathAfterLogin = \"/home\"\n            // reRouteAfterCompleteLogin(pathAfterLogin);\n            this.props.registered();\n            const path = \"/login\";\n            this.props.history.push(path);\n          } else if (message === \"USER_ALREADY_EXISTS\") {\n            console.log(\"user already exists\");\n            this.props.userAlreadyExists();\n          } else if (message === \"ERR_NO_PASSWORD\") {\n            console.log(\"handle no password error\");\n          }\n        })\n        .catch(err => {\n          console.log(err.message);\n        });\n    }\n  }\n\n  componentDidMount = () => {\n\n    // update path so if you're logged in Login knows\n    // last path is \"/register\"\n    let path = \"/register\"\n    this.props.reRouteAfterCompleteLogin(path);\n    console.log(this.props.ROUTE)\n  };\n\n  render() {\n    console.log(this.props);\n    const {\n      validated,\n      isRegistered,\n      USER_ALREADY_EXISTS,\n      FORM_NOT_FULLFILLED,\n      SPACE_IN_USERNAME\n    } = this.props;\n    return (\n      <div>\n        <Form\n          noValidate\n          validated={validated}\n          onSubmit={e => this.handleSubmit(e)}\n          className=\"RegisterForm\"\n        >\n          <Form.Row>\n            <Form.Group as={Col} md=\"4\" controlId=\"firstName\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"First name\"\n                defaultValue=\"Mark\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"lastName\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Last name\"\n                defaultValue=\"Otto\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"8\" controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Email\" />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"8\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"User Name\" />\n              {USER_ALREADY_EXISTS && (\n                <p className=\"errorHandler\">User already exists</p>\n              )}\n            </Form.Group>\n            <Form.Group as={Col} md=\"8\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n          </Form.Row>\n          {FORM_NOT_FULLFILLED && (\n            <p className=\"errorHandler\">Please fill out form</p>\n          )}\n          {SPACE_IN_USERNAME && (\n            <p className=\"errorHandler\">No spaces are allowed as characters</p>\n          )}\n          <Button type=\"submit\">Register</Button>\n        </Form>\n        {/* {registered && <Login />} */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let {\n    username,\n    password,\n    validated,\n    isRegistered,\n    USER_ALREADY_EXISTS,\n    FORM_NOT_FULLFILLED,\n    SPACE_IN_USERNAME\n  } = state.registerReducer;\n  let { ROUTE } = state.loginReducer;\n  console.log(state);\n  return {\n    username,\n    password,\n    validated,\n    isRegistered,\n    USER_ALREADY_EXISTS,\n    FORM_NOT_FULLFILLED,\n    SPACE_IN_USERNAME,\n    ROUTE\n  };\n};\n\nconst mapDispatchToProps = {\n  validate,\n  formNotFullfilled,\n  registered,\n  userAlreadyExists,\n  reRouteAfterCompleteLogin\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register);\n","export const validate = validate => {\n  return {\n    type: \"REGISTER_VALIDATE\",\n    validate\n  };\n};\n\nexport const formNotFullfilled = () => {\n  return {\n    type: \"FORM_NOT_FULLFILLED\"\n  };\n};\n\nexport const registered = () => {\n  return {\n    type: \"REGISTERED\"\n  };\n};\n\nexport const userAlreadyExists = () => {\n  return {\n    type: \"USER_ALREADY_EXISTS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/layout/Navbar\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\n// Import Pages\nimport showPostings from \"./components/pages/showPostings\";\nimport Home from \"./components/pages/Home\";\nimport Post from \"./components/pages/Post\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Login from \"./components/Users/Login\";\nimport Register from \"./components/Users/Register\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/post\" component={Post} />\n            <Route exact path=\"/showPostings\" component={showPostings} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\n  username: \"\",\n  password: \"\",\n  validated: false,\n  LOGGEDIN: false,\n  USER_NOT_FOUND: false,\n  INCORRECT_USERNAME_OR_PASSWORD: false,\n  ROUTE: \"\"\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"VALIDATE\":\n      let {\n        validated,\n        LOGGEDIN,\n        USER_NOT_FOUND,\n        INCORRECT_USERNAME_OR_PASSWORD\n      } = action.validate;\n      return {\n        ...state,\n        validated: validated,\n        LOGGEDIN: LOGGEDIN,\n        USER_NOT_FOUND: USER_NOT_FOUND,\n        INCORRECT_USERNAME_OR_PASSWORD: INCORRECT_USERNAME_OR_PASSWORD\n      };\n    case \"REDIRECT\":\n      let route = action.route;\n      console.log(route);\n      return {\n        ...state,\n        // REDIRECT: true,\n        ROUTE: route\n      };\n    case \"LOGGOUT\":\n      return {\n        ...state,\n        LOGGEDIN: false\n      };\n      console.log(\"logout action\");\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","const INITIAL_STATE = {\n  username: \"\",\n  password: \"\",\n  validated: false,\n  isRegistered: false,\n  USER_ALREADY_EXISTS: false,\n  FORM_NOT_FULLFILLED: false,\n  SPACE_IN_USERNAME: false\n};\n\nconst registerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"REGISTER_VALIDATE\":\n      let {\n        validated,\n        isRegistered,\n        USER_ALREADY_EXISTS,\n        FORM_NOT_FULLFILLED,\n        SPACE_IN_USERNAME\n      } = action.validate;\n\n      return {\n        ...state,\n        validated,\n        isRegistered,\n        USER_ALREADY_EXISTS,\n        FORM_NOT_FULLFILLED,\n        SPACE_IN_USERNAME\n      };\n    case \"FORM_NOT_FULLFILLED\":\n      return {\n        ...state,\n        FORM_NOT_FULLFILLED: true\n      };\n    case \"REGISTERED\":\n      return {\n        ...state,\n        isRegistered: true,\n        validated: true\n      };\n    case \"USER_ALREADY_EXISTS\":\n      return {\n        ...state,\n        USER_ALREADY_EXISTS: true,\n        FORM_NOT_FULLFILLED: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default registerReducer;\n","const INITIAL_STATE = {\n  login: false,\n  register: false\n};\n\nconst userauthReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"CLICKED_LOGIN\":\n      return {\n        login: true,\n        register: false\n      };\n\n    case \"CLICKED_REGISTER\":\n      return {\n        login: false,\n        register: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userauthReducer;\n","const INITIAL_STATE = {\n  postStatus: \"\",\n  location: \"\",\n  postType: \"\",\n  loadedFiles: [],\n  fd: \"\",\n  file: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  street: \"\",\n  city: \"\",\n  state: \"\",\n  zipcode: \"\",\n  issueType: \"\",\n  description: \"\",\n  imageFile: \"\",\n  locationError: false,\n  geoLocationIsLoading: false,\n  TRIED_POSTING_ISSUE: false,\n};\n\n// Post reducer\nconst postReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"UPDATE_FORM\":\n      let fieldToChange = action.fieldToChange;\n      let keyName = \"\";\n      let value = \"\";\n      console.log(keyName);\n      console.log(value);\n      console.log(fieldToChange);\n      // Seperate keys and values\n      // We can update store with any key \n      // with any value\n      for( let key in fieldToChange ) {\n        keyName = key;\n        value = fieldToChange[key];\n      }  \n      \n      return {\n        ...state,\n        [keyName]: value\n      };  \n    case \"LOAD_IMAGE\":\n      let newImage = action.newImage;\n\n      return {\n        ...state,\n        imageFile: newImage\n      };\n    case \"UPDATE_GEOLOCATION\":\n      let { latitude, longitude } = action.location;\n      \n      return {\n        ...state,\n        latitude: latitude,\n        longitude: longitude\n      };\n    case \"ADD_TO_IMAGE_LIST\":\n      let imageToAdd = action.imageToAdd;\n      \n      return {\n        ...state,\n        loadedFiles: [...state.loadedFiles, imageToAdd]\n      };\n\n    case \"ERR_GET_LOCATION\":\n      return {\n        ...state,\n        locationError: true\n      }\n\n    case \"ADD_TO_IMAGE_LIST\":\n      return {\n        ...state,\n        loadedFiles: []\n      };\n    case \"GEO_LOCATION_LOADING\":\n      return{\n        ...state,\n        geoLocationIsLoading: true,\n      };\n    case \"GEO_LOCATION_DONE_LOADING\":\n      return {\n        ...state,\n        geoLocationIsLoading: false,\n      }\n\n    // Case TRIED_POSTING_ISSUE and FINISHED_LOGGING_IN_AFTER_TRYING_TO_POST\n    // are just used to set TRIED_POSTING_ISSUE to true and false\n    // it will turn true if user tries to post without logging in,\n    // It will turn false after the user has succesfully logged in.\n    case \"TRIED_POSTING_ISSUE\":\n      return {\n        ...state,\n        TRIED_POSTING_ISSUE: true,\n      }\n    case \"FINISHED_LOGGING_IN_AFTER_TRYING_TO_POST\":\n      return{\n        ...state,\n        TRIED_POSTING_ISSUE: false,\n      }\n    case \"RESET_REDUCER\":\n      return {\n        postStatus: \"\",\n        location: \"\",\n        postType: \"\",\n        loadedFiles: [],\n        fd: \"\",\n        file: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n        issueType: \"\",\n        description: \"\",\n        imageFile: \"\",\n        locationError: \"\",\n        geoLocationIsLoading: false, \n      }\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","const INITIAL_STATE = {\n  data: [],\n  pageIndex: 1,\n  search: \"\",\n  details_id: \"\",\n};\n\nconst homepageReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      console.log(action);\n      let { data } = action;\n      console.log(data);\n      console.log(state.data);\n      return {\n        ...state,\n        data: [...data]\n      };\n    case \"CLICKED_ISSUE_DETAILS\":\n      let { id, index } = action.tempObj;\n      console.log(id, index);\n      return {\n        ...state,\n        details_id: id,\n        pageIndex: index\n      };\n    case \"UPDATE_INDEX\":\n      return {\n          ...state,\n          pageIndex:index\n      };\n    default:\n      return state;\n  }\n};\n\nexport default homepageReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import redux\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\n// import reducers\nimport loginReducer from \"./components/redux/reducers/loginReducer\";\nimport registerReducer from \"./components/redux/reducers/registerReducer\";\nimport userauthReducer from \"./components/redux/reducers/userauthReducer\"\nimport postReducer from \"./components/redux/reducers/postReducer\"\nimport homepageReducer from \"./components/redux/reducers/homepageReducer\"\n\n// combine reducers\nconst rootReducer = combineReducers({\n  loginReducer,\n  registerReducer,\n  userauthReducer,\n  postReducer,\n  homepageReducer\n});\n\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}